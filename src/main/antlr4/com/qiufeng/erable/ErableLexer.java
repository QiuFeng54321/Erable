// Generated from Erable.g4 by ANTLR 4.7.1

  import java.util.*;
  //import com.qiufeng.erable.*;
  //import com.qiufeng.erable.ast.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ErableLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, EQU=5, UNARYOPS=6, BINOPS=7, POW=8, COLON=9, 
		SPLIT=10, DOT=11, COMMA=12, ADD=13, SUB=14, MUL=15, DIV=16, MOD=17, BNOT=18, 
		LPA=19, RPA=20, LCB=21, RCB=22, ALPA=23, ARPA=24, VAR_ID=25, FUNC=26, 
		WHILE=27, IF=28, ELIF=29, ELSE=30, RETURN=31, BREAK=32, NAME=33, INT=34, 
		BIN=35, OCT=36, HEX=37, HEXD=38, ESC=39, UNICODE=40, WS=41;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "EQU", "UNARYOPS", "BINOPS", "POW", "ULS", 
		"URS", "SWITCH", "LTE", "GTE", "LS", "RS", "AND", "OR", "XOR", "ADDEQ", 
		"SUBEQ", "MULEQ", "DIVEQ", "MODEQ", "EQ", "NEQ", "LT", "GT", "COLON", 
		"SPLIT", "DOT", "COMMA", "ADD", "SUB", "MUL", "DIV", "MOD", "BAND", "BOR", 
		"BXOR", "BNOT", "LPA", "RPA", "LCB", "RCB", "ALPA", "ARPA", "VAR_SC", 
		"VAR_CG", "VAR_TP", "VAR_ID", "FUNC", "WHILE", "IF", "ELIF", "ELSE", "RETURN", 
		"BREAK", "NAME", "LETT", "DIGITS", "INT", "BIN", "OCT", "HEX", "HEXD", 
		"ESC", "UNICODE", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'\"'", "'0x'", "'0b'", "'0o'", "'='", null, null, "'**'", "':'", 
		"';'", "'.'", "','", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", "'('", 
		"')'", "'{'", "'}'", "'['", "']'", null, "'function'", "'while'", "'if'", 
		"'elif'", "'else'", "'return'", "'break'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, "EQU", "UNARYOPS", "BINOPS", "POW", "COLON", 
		"SPLIT", "DOT", "COMMA", "ADD", "SUB", "MUL", "DIV", "MOD", "BNOT", "LPA", 
		"RPA", "LCB", "RCB", "ALPA", "ARPA", "VAR_ID", "FUNC", "WHILE", "IF", 
		"ELIF", "ELSE", "RETURN", "BREAK", "NAME", "INT", "BIN", "OCT", "HEX", 
		"HEXD", "ESC", "UNICODE", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	    


	public ErableLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Erable.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2+\u019a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\3\2\3\2\3\3\3\3\3\3\3"+
		"\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7\5\7\u009c\n\7\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b"+
		"\5\b\u00b3\n\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3"+
		"\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3"+
		"-\3-\3.\3.\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u011e\n\60\3\61\3"+
		"\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\5"+
		"\61\u012f\n\61\3\62\3\62\3\62\3\62\3\62\3\62\5\62\u0137\n\62\3\63\3\63"+
		"\3\63\5\63\u013c\n\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\65"+
		"\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\3"+
		"8\38\38\38\39\39\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3;\3;\3;\7;\u016a\n"+
		";\f;\16;\u016d\13;\3<\3<\3=\3=\3>\6>\u0174\n>\r>\16>\u0175\3?\6?\u0179"+
		"\n?\r?\16?\u017a\3@\6@\u017e\n@\r@\16@\u017f\3A\6A\u0183\nA\rA\16A\u0184"+
		"\3B\3B\3C\3C\3C\5C\u018c\nC\3D\3D\3D\3D\3D\3D\3E\6E\u0195\nE\rE\16E\u0196"+
		"\3E\3E\2\2F\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\2\25\2\27\2\31\2\33"+
		"\2\35\2\37\2!\2#\2%\2\'\2)\2+\2-\2/\2\61\2\63\2\65\2\67\29\13;\f=\r?\16"+
		"A\17C\20E\21G\22I\23K\2M\2O\2Q\24S\25U\26W\27Y\30[\31]\32_\2a\2c\2e\33"+
		"g\34i\35k\36m\37o q!s\"u#w\2y\2{$}%\177&\u0081\'\u0083(\u0085)\u0087*"+
		"\u0089+\3\2\n\6\2&&C\\aac|\3\2\62;\3\2\62\63\3\2\62:\5\2\62;CHch\t\2$"+
		"$^^ddhhppttvv\4\2WWww\5\2\13\f\17\17\"\"\2\u01a1\2\3\3\2\2\2\2\5\3\2\2"+
		"\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2"+
		"\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2"+
		"\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2"+
		"\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\3\u008b\3\2\2\2\5\u008d"+
		"\3\2\2\2\7\u0090\3\2\2\2\t\u0093\3\2\2\2\13\u0096\3\2\2\2\r\u009b\3\2"+
		"\2\2\17\u00b2\3\2\2\2\21\u00b4\3\2\2\2\23\u00b7\3\2\2\2\25\u00bb\3\2\2"+
		"\2\27\u00bf\3\2\2\2\31\u00c3\3\2\2\2\33\u00c6\3\2\2\2\35\u00c9\3\2\2\2"+
		"\37\u00cc\3\2\2\2!\u00cf\3\2\2\2#\u00d2\3\2\2\2%\u00d5\3\2\2\2\'\u00d8"+
		"\3\2\2\2)\u00db\3\2\2\2+\u00de\3\2\2\2-\u00e1\3\2\2\2/\u00e4\3\2\2\2\61"+
		"\u00e7\3\2\2\2\63\u00ea\3\2\2\2\65\u00ed\3\2\2\2\67\u00ef\3\2\2\29\u00f1"+
		"\3\2\2\2;\u00f3\3\2\2\2=\u00f5\3\2\2\2?\u00f7\3\2\2\2A\u00f9\3\2\2\2C"+
		"\u00fb\3\2\2\2E\u00fd\3\2\2\2G\u00ff\3\2\2\2I\u0101\3\2\2\2K\u0103\3\2"+
		"\2\2M\u0105\3\2\2\2O\u0107\3\2\2\2Q\u0109\3\2\2\2S\u010b\3\2\2\2U\u010d"+
		"\3\2\2\2W\u010f\3\2\2\2Y\u0111\3\2\2\2[\u0113\3\2\2\2]\u0115\3\2\2\2_"+
		"\u011d\3\2\2\2a\u012e\3\2\2\2c\u0136\3\2\2\2e\u013b\3\2\2\2g\u013d\3\2"+
		"\2\2i\u0146\3\2\2\2k\u014c\3\2\2\2m\u014f\3\2\2\2o\u0154\3\2\2\2q\u0159"+
		"\3\2\2\2s\u0160\3\2\2\2u\u0166\3\2\2\2w\u016e\3\2\2\2y\u0170\3\2\2\2{"+
		"\u0173\3\2\2\2}\u0178\3\2\2\2\177\u017d\3\2\2\2\u0081\u0182\3\2\2\2\u0083"+
		"\u0186\3\2\2\2\u0085\u0188\3\2\2\2\u0087\u018d\3\2\2\2\u0089\u0194\3\2"+
		"\2\2\u008b\u008c\7$\2\2\u008c\4\3\2\2\2\u008d\u008e\7\62\2\2\u008e\u008f"+
		"\7z\2\2\u008f\6\3\2\2\2\u0090\u0091\7\62\2\2\u0091\u0092\7d\2\2\u0092"+
		"\b\3\2\2\2\u0093\u0094\7\62\2\2\u0094\u0095\7q\2\2\u0095\n\3\2\2\2\u0096"+
		"\u0097\7?\2\2\u0097\f\3\2\2\2\u0098\u009c\5Q)\2\u0099\u009c\5q9\2\u009a"+
		"\u009c\5s:\2\u009b\u0098\3\2\2\2\u009b\u0099\3\2\2\2\u009b\u009a\3\2\2"+
		"\2\u009c\16\3\2\2\2\u009d\u00b3\5#\22\2\u009e\u00b3\5%\23\2\u009f\u00b3"+
		"\5K&\2\u00a0\u00b3\5M\'\2\u00a1\u00b3\5O(\2\u00a2\u00b3\5\'\24\2\u00a3"+
		"\u00b3\5)\25\2\u00a4\u00b3\5+\26\2\u00a5\u00b3\5-\27\2\u00a6\u00b3\5/"+
		"\30\2\u00a7\u00b3\5\63\32\2\u00a8\u00b3\5\61\31\2\u00a9\u00b3\5\27\f\2"+
		"\u00aa\u00b3\5\23\n\2\u00ab\u00b3\5\25\13\2\u00ac\u00b3\5\31\r\2\u00ad"+
		"\u00b3\5\33\16\2\u00ae\u00b3\5\35\17\2\u00af\u00b3\5\37\20\2\u00b0\u00b3"+
		"\5\65\33\2\u00b1\u00b3\5\67\34\2\u00b2\u009d\3\2\2\2\u00b2\u009e\3\2\2"+
		"\2\u00b2\u009f\3\2\2\2\u00b2\u00a0\3\2\2\2\u00b2\u00a1\3\2\2\2\u00b2\u00a2"+
		"\3\2\2\2\u00b2\u00a3\3\2\2\2\u00b2\u00a4\3\2\2\2\u00b2\u00a5\3\2\2\2\u00b2"+
		"\u00a6\3\2\2\2\u00b2\u00a7\3\2\2\2\u00b2\u00a8\3\2\2\2\u00b2\u00a9\3\2"+
		"\2\2\u00b2\u00aa\3\2\2\2\u00b2\u00ab\3\2\2\2\u00b2\u00ac\3\2\2\2\u00b2"+
		"\u00ad\3\2\2\2\u00b2\u00ae\3\2\2\2\u00b2\u00af\3\2\2\2\u00b2\u00b0\3\2"+
		"\2\2\u00b2\u00b1\3\2\2\2\u00b3\20\3\2\2\2\u00b4\u00b5\7,\2\2\u00b5\u00b6"+
		"\7,\2\2\u00b6\22\3\2\2\2\u00b7\u00b8\7>\2\2\u00b8\u00b9\7>\2\2\u00b9\u00ba"+
		"\7>\2\2\u00ba\24\3\2\2\2\u00bb\u00bc\7@\2\2\u00bc\u00bd\7@\2\2\u00bd\u00be"+
		"\7@\2\2\u00be\26\3\2\2\2\u00bf\u00c0\7>\2\2\u00c0\u00c1\7?\2\2\u00c1\u00c2"+
		"\7@\2\2\u00c2\30\3\2\2\2\u00c3\u00c4\7>\2\2\u00c4\u00c5\7?\2\2\u00c5\32"+
		"\3\2\2\2\u00c6\u00c7\7@\2\2\u00c7\u00c8\7?\2\2\u00c8\34\3\2\2\2\u00c9"+
		"\u00ca\7>\2\2\u00ca\u00cb\7>\2\2\u00cb\36\3\2\2\2\u00cc\u00cd\7@\2\2\u00cd"+
		"\u00ce\7@\2\2\u00ce \3\2\2\2\u00cf\u00d0\7(\2\2\u00d0\u00d1\7(\2\2\u00d1"+
		"\"\3\2\2\2\u00d2\u00d3\7~\2\2\u00d3\u00d4\7~\2\2\u00d4$\3\2\2\2\u00d5"+
		"\u00d6\7`\2\2\u00d6\u00d7\7`\2\2\u00d7&\3\2\2\2\u00d8\u00d9\7-\2\2\u00d9"+
		"\u00da\7?\2\2\u00da(\3\2\2\2\u00db\u00dc\7/\2\2\u00dc\u00dd\7?\2\2\u00dd"+
		"*\3\2\2\2\u00de\u00df\7,\2\2\u00df\u00e0\7?\2\2\u00e0,\3\2\2\2\u00e1\u00e2"+
		"\7\61\2\2\u00e2\u00e3\7?\2\2\u00e3.\3\2\2\2\u00e4\u00e5\7\'\2\2\u00e5"+
		"\u00e6\7?\2\2\u00e6\60\3\2\2\2\u00e7\u00e8\7?\2\2\u00e8\u00e9\7?\2\2\u00e9"+
		"\62\3\2\2\2\u00ea\u00eb\7#\2\2\u00eb\u00ec\7?\2\2\u00ec\64\3\2\2\2\u00ed"+
		"\u00ee\7>\2\2\u00ee\66\3\2\2\2\u00ef\u00f0\7@\2\2\u00f08\3\2\2\2\u00f1"+
		"\u00f2\7<\2\2\u00f2:\3\2\2\2\u00f3\u00f4\7=\2\2\u00f4<\3\2\2\2\u00f5\u00f6"+
		"\7\60\2\2\u00f6>\3\2\2\2\u00f7\u00f8\7.\2\2\u00f8@\3\2\2\2\u00f9\u00fa"+
		"\7-\2\2\u00faB\3\2\2\2\u00fb\u00fc\7/\2\2\u00fcD\3\2\2\2\u00fd\u00fe\7"+
		",\2\2\u00feF\3\2\2\2\u00ff\u0100\7\61\2\2\u0100H\3\2\2\2\u0101\u0102\7"+
		"\'\2\2\u0102J\3\2\2\2\u0103\u0104\7(\2\2\u0104L\3\2\2\2\u0105\u0106\7"+
		"~\2\2\u0106N\3\2\2\2\u0107\u0108\7`\2\2\u0108P\3\2\2\2\u0109\u010a\7#"+
		"\2\2\u010aR\3\2\2\2\u010b\u010c\7*\2\2\u010cT\3\2\2\2\u010d\u010e\7+\2"+
		"\2\u010eV\3\2\2\2\u010f\u0110\7}\2\2\u0110X\3\2\2\2\u0111\u0112\7\177"+
		"\2\2\u0112Z\3\2\2\2\u0113\u0114\7]\2\2\u0114\\\3\2\2\2\u0115\u0116\7_"+
		"\2\2\u0116^\3\2\2\2\u0117\u0118\7x\2\2\u0118\u0119\7c\2\2\u0119\u011e"+
		"\7t\2\2\u011a\u011b\7n\2\2\u011b\u011c\7g\2\2\u011c\u011e\7v\2\2\u011d"+
		"\u0117\3\2\2\2\u011d\u011a\3\2\2\2\u011e`\3\2\2\2\u011f\u0120\7e\2\2\u0120"+
		"\u0121\7q\2\2\u0121\u0122\7p\2\2\u0122\u0123\7u\2\2\u0123\u012f\7v\2\2"+
		"\u0124\u0125\7e\2\2\u0125\u0126\7j\2\2\u0126\u0127\7c\2\2\u0127\u0128"+
		"\7p\2\2\u0128\u0129\7i\2\2\u0129\u012a\7g\2\2\u012a\u012b\7c\2\2\u012b"+
		"\u012c\7d\2\2\u012c\u012d\7n\2\2\u012d\u012f\7g\2\2\u012e\u011f\3\2\2"+
		"\2\u012e\u0124\3\2\2\2\u012fb\3\2\2\2\u0130\u0131\7q\2\2\u0131\u0132\7"+
		"d\2\2\u0132\u0137\7l\2\2\u0133\u0134\7t\2\2\u0134\u0135\7g\2\2\u0135\u0137"+
		"\7h\2\2\u0136\u0130\3\2\2\2\u0136\u0133\3\2\2\2\u0137d\3\2\2\2\u0138\u013c"+
		"\5_\60\2\u0139\u013c\5a\61\2\u013a\u013c\5c\62\2\u013b\u0138\3\2\2\2\u013b"+
		"\u0139\3\2\2\2\u013b\u013a\3\2\2\2\u013cf\3\2\2\2\u013d\u013e\7h\2\2\u013e"+
		"\u013f\7w\2\2\u013f\u0140\7p\2\2\u0140\u0141\7e\2\2\u0141\u0142\7v\2\2"+
		"\u0142\u0143\7k\2\2\u0143\u0144\7q\2\2\u0144\u0145\7p\2\2\u0145h\3\2\2"+
		"\2\u0146\u0147\7y\2\2\u0147\u0148\7j\2\2\u0148\u0149\7k\2\2\u0149\u014a"+
		"\7n\2\2\u014a\u014b\7g\2\2\u014bj\3\2\2\2\u014c\u014d\7k\2\2\u014d\u014e"+
		"\7h\2\2\u014el\3\2\2\2\u014f\u0150\7g\2\2\u0150\u0151\7n\2\2\u0151\u0152"+
		"\7k\2\2\u0152\u0153\7h\2\2\u0153n\3\2\2\2\u0154\u0155\7g\2\2\u0155\u0156"+
		"\7n\2\2\u0156\u0157\7u\2\2\u0157\u0158\7g\2\2\u0158p\3\2\2\2\u0159\u015a"+
		"\7t\2\2\u015a\u015b\7g\2\2\u015b\u015c\7v\2\2\u015c\u015d\7w\2\2\u015d"+
		"\u015e\7t\2\2\u015e\u015f\7p\2\2\u015fr\3\2\2\2\u0160\u0161\7d\2\2\u0161"+
		"\u0162\7t\2\2\u0162\u0163\7g\2\2\u0163\u0164\7c\2\2\u0164\u0165\7m\2\2"+
		"\u0165t\3\2\2\2\u0166\u016b\5w<\2\u0167\u016a\5w<\2\u0168\u016a\5y=\2"+
		"\u0169\u0167\3\2\2\2\u0169\u0168\3\2\2\2\u016a\u016d\3\2\2\2\u016b\u0169"+
		"\3\2\2\2\u016b\u016c\3\2\2\2\u016cv\3\2\2\2\u016d\u016b\3\2\2\2\u016e"+
		"\u016f\t\2\2\2\u016fx\3\2\2\2\u0170\u0171\t\3\2\2\u0171z\3\2\2\2\u0172"+
		"\u0174\t\3\2\2\u0173\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0173\3\2"+
		"\2\2\u0175\u0176\3\2\2\2\u0176|\3\2\2\2\u0177\u0179\t\4\2\2\u0178\u0177"+
		"\3\2\2\2\u0179\u017a\3\2\2\2\u017a\u0178\3\2\2\2\u017a\u017b\3\2\2\2\u017b"+
		"~\3\2\2\2\u017c\u017e\t\5\2\2\u017d\u017c\3\2\2\2\u017e\u017f\3\2\2\2"+
		"\u017f\u017d\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0080\3\2\2\2\u0181\u0183"+
		"\t\6\2\2\u0182\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0182\3\2\2\2\u0184"+
		"\u0185\3\2\2\2\u0185\u0082\3\2\2\2\u0186\u0187\t\6\2\2\u0187\u0084\3\2"+
		"\2\2\u0188\u018b\7^\2\2\u0189\u018c\t\7\2\2\u018a\u018c\5\u0087D\2\u018b"+
		"\u0189\3\2\2\2\u018b\u018a\3\2\2\2\u018c\u0086\3\2\2\2\u018d\u018e\t\b"+
		"\2\2\u018e\u018f\5\u0083B\2\u018f\u0190\5\u0083B\2\u0190\u0191\5\u0083"+
		"B\2\u0191\u0192\5\u0083B\2\u0192\u0088\3\2\2\2\u0193\u0195\t\t\2\2\u0194"+
		"\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0194\3\2\2\2\u0196\u0197\3\2"+
		"\2\2\u0197\u0198\3\2\2\2\u0198\u0199\bE\2\2\u0199\u008a\3\2\2\2\21\2\u009b"+
		"\u00b2\u011d\u012e\u0136\u013b\u0169\u016b\u0175\u017a\u017f\u0184\u018b"+
		"\u0196\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}