Parsed file test.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:4 ms.
ID:java
File test.erable finished.Total time:475 ms.
ConstantPoolElement{id=0, obj=0.0}
ConstantPoolElement{id=1, obj=1.0}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=java.lang.System#out#println}
ConstantPoolElement{id=4, obj=com.qiufeng.erable.stdlib.InputScanner#input}
ConstantPoolElement{id=5, obj=stdlib/ios.erable}
ConstantPoolElement{id=6, obj=stdlib/java.ec}
ConstantPoolElement{id=7, obj=stdlib/java.dynec}
ConstantPoolElement{id=8, obj=hi}
ConstantPoolElement{id=9, obj=2.0}
ConstantPoolElement{id=10, obj=qualified!}
ConstantPoolElement{id=11, obj=name}
ConstantPoolElement{id=12, obj=age}
ConstantPoolElement{id=13, obj=habits}
ConstantPoolElement{id=14, obj=says:MEOWWWWWW}
ConstantPoolElement{id=15, obj=meow}
ConstantPoolElement{id=16, obj=hi~}
ConstantPoolElement{id=17, obj=divide ended.}
ConstantPoolElement{id=18, obj=15.0}
ConstantPoolElement{id=19, obj=20.0}
ConstantPoolElement{id=20, obj=3.0}
ConstantPoolElement{id=21, obj=5.0}
ConstantPoolElement{id=22, obj=4.0}
ConstantPoolElement{id=23, obj=9.0}
ConstantPoolElement{id=24, obj=java.lang.String}
ConstantPoolElement{id=25, obj=abc}
>#0 :
-->|ConstantPool

-->@4  buffer 1 to @4

-->%true : variable `0` true = @4 ->5

-->@6  buffer 0 to @6

-->%false : variable `0` false = @6 ->7

-->@9  buffer 2 to @9

-->@12  buffer 3 to @12

-->%println : function println[id=10 name=object] ->13 : native 12

-->@15  buffer 4 to @15

-->%input : function input[] ->16 : native 15

-->@18  buffer 5 to @18

-->@20  buffer 6 to @20

-->@22  buffer 7 to @22

-->%java  Dynamic Load Module: stdlib/java.ec, Table: stdlib/java.dynec, as 23 with name java

-->@25  buffer 8 to @25

-->%prefix : variable `0` prefix = @25 ->26

-->%mul : function mul[id=28 name=a, id=29 name=b] ->27 :
---->#30 :
------>@31  @28 MUL(5) @29 ->31

------>@32  RETURN(37) @31 ->32



-->%quad : function quad[id=34 name=a, id=35 name=b, id=36 name=c, id=37 name=x] ->33 :
---->#38 :
------>@40  buffer 9 to @40

------>@41  @34 POW(8) @40 ->41

------>%power : variable `1` power = @41 ->42

------>@43  @42 ADD(3) @35 ->43

------>@44  @43 MUL(5) @37 ->44

------>@45  @44 ADD(3) @36 ->45

------>@46  RETURN(37) @45 ->46



-->%makeSquare : function makeSquare[id=48 name=width, id=49 name=height] ->47 :
---->#50 :
------>@51  mul@27[48, 49] ->51

------>@52  Array [48, 49, 51] ->52

------>@53  RETURN(37) @52 ->53



-->%switchWH : function switchWH[id=55 name=square] ->54 :
---->#56 :
------>^57  if ->57
-------->@59  buffer 0 to @59

-------->@60  @55 ELEMENT(11) @59 ->60

-------->@62  buffer 1 to @62

-------->@63  @55 ELEMENT(11) @62 ->63

-------->@64  @60 EQ(20) @63 ->64

-------->!65  Flag BREAKIF(57) 64

-------->@66  RETURN(37) @55 ->66

-------->!67  Flag END(54) 56

-------->^68  else ->68
---------->^69  if ->69
------------>@71  buffer 0 to @71

------------>@72  @55 ELEMENT(11) @71 ->72

------------>@74  buffer 0 to @74

------------>@75  @72 EQ(20) @74 ->75

------------>@77  buffer 1 to @77

------------>@78  @55 ELEMENT(11) @77 ->78

------------>@79  @75 BOR(26) @78 ->79

------------>@81  buffer 0 to @81

------------>@82  @79 EQ(20) @81 ->82

------------>!83  Flag BREAKIF(57) 82

------------>@84  RETURN(37) @55 ->84

------------>!85  Flag END(54) 68

------------>^86  else ->86
-------------->@88  buffer 10 to @88

-------------->@89  println@13[88] ->89





------>@91  buffer 0 to @91

------>@92  @55 ELEMENT(11) @91 ->92

------>@94  buffer 1 to @94

------>@95  @55 ELEMENT(11) @94 ->95

------>@96  @92 SWITCH(23) @95 ->96

------>@97  RETURN(37) @55 ->97



-->%isNegative : function isNegative[id=99 name=number] ->98 :
---->#100 :
------>^101  if ->101
-------->@102  NEG(10) @99 ->102

-------->@103  @102 EQ(20) @99 ->103

-------->!104  Flag BREAKIF(57) 103

-------->#105 :
---------->@106  RETURN(37) @5 ->106


-------->!107  Flag END(54) 100

-------->^108  else ->108
---------->#109 :
------------>@110  RETURN(37) @7 ->110






-->%loop : function loop[id=112 name=from, id=113 name=to, id=114 name=step] ->111 :
---->#115 :
------>%a : variable `1` a = @112 ->116

------>@118  buffer 0 to @118

------>%count : variable `1` count = @118 ->119

------>^120  while ->120 :
-------->@121  @116 LT(16) @113 ->121

-------->!122  Flag BREAKIF(57) 121

-------->#123 :
---------->@124  @116 ADDEQ(28) @114 ->124


-------->!125  Flag END(54) 115


------>@126  RETURN(37) @119 ->126



-->%say : function say[id=128 name=something] ->127 :
---->#129 :
------>@130  @26 ADD(3) @128 ->130

------>@131  RETURN(37) @130 ->131



-->%newCat : function newCat[id=133 name=name, id=134 name=age] ->132 :
---->#135 :
------>@136  object ->136 :
-------->!137  Flag START_PAIR(59) 

-------->@139  buffer 11 to @139

-------->!140  Flag KEY(60) 139

-------->!141  Flag VALUE(61) 133

-------->!142  Flag END_PAIR(62) 

-------->!143  Flag START_PAIR(59) 

-------->@145  buffer 12 to @145

-------->!146  Flag KEY(60) 145

-------->!147  Flag VALUE(61) 134

-------->!148  Flag END_PAIR(62) 

-------->!149  Flag START_PAIR(59) 

-------->@151  buffer 13 to @151

-------->!152  Flag KEY(60) 151

-------->@154  buffer 9 to @154

-------->!155  Flag VALUE(61) 154

-------->!156  Flag END_PAIR(62) 

-------->!157  Flag START_PAIR(59) 

-------->%meow : function meow[] ->158 :
---------->#159 :
------------>@161  buffer 11 to @161

------------>@162  @136 ELEMENT(11) @161 ->162

------------>@164  buffer 14 to @164

------------>@165  @162 ADD(3) @164 ->165

------------>@166  println@13[165] ->166



-------->@168  buffer 15 to @168

-------->!169  Flag KEY(60) 168

-------->!170  Flag VALUE(61) 158

-------->!171  Flag END_PAIR(62) 


------>@172  RETURN(37) @136 ->172



-->%testOverload : function testOverload[id=174 name=a, id=175 name=b] ->173 :
---->#176 :
------>@178  buffer 16 to @178

------>@179  @178 ADD(3) @174 ->179

------>@180  @179 ADD(3) @175 ->180

------>@181  RETURN(37) @180 ->181



-->%testOverload : function testOverload[id=183 name=c, id=184 name=d, id=185 name=b] ->182 :
---->#186 :
------>@187  @183 MUL(5) @185 ->187

------>@188  @187 MUL(5) @184 ->188

------>@189  RETURN(37) @188 ->189



-->%testOverload : function testOverload[id=191 name=x] ->190 :
---->#192 :
------>@194  buffer 9 to @194

------>@195  @191 POW(8) @194 ->195

------>@196  RETURN(37) @195 ->196



-->%testTryCatch : function testTryCatch[id=198 name=a, id=199 name=b] ->197 :
---->#200 :
------>^201  try ->201 :
-------->!202  Flag TRY_START(64) 

-------->#203 :
---------->@204  @198 DIV(6) @199 ->204

---------->@205  RETURN(37) @204 ->205


-------->!206  Flag TRY_END(65) 

-------->!208  Flag CATCH_ID(66) 207

-------->!209  Flag CATCH_START(67) 

-------->#210 :
---------->@211  println@13[207] ->211


-------->!212  Flag CATCH_END(68) 

-------->!213  Flag FINALLY(69) 201

-------->#214 :
---------->@216  buffer 17 to @216

---------->@217  println@13[216] ->217





-->@219  buffer 18 to @219

-->@221  buffer 19 to @221

-->@222  makeSquare@47[219, 221] ->222

-->%square : variable `0` square = @222 ->223

-->@224  @223 EQU(22) @54 ->224

-->@225  square=switchWH@224[223] ->225

-->@226  println@13[223] ->226

-->@228  buffer 9 to @228

-->@230  buffer 20 to @230

-->@232  buffer 21 to @232

-->@233  testOverload@173[228, 230, 232] ->233

-->@235  buffer 1 to @235

-->@237  buffer 22 to @237

-->@238  testOverload@173[235, 237] ->238

-->@240  buffer 23 to @240

-->@241  testOverload@173[240] ->241

-->@243  buffer 21 to @243

-->@245  buffer 9 to @245

-->@247  buffer 20 to @247

-->@248  testOverload@173[243, 245, 247] ->248

-->@249  Module @23 Accessing: @12

-->@251  buffer 24 to @251

-->@253  buffer 25 to @253

-->@254  Array [253] ->254

-->@255  java->java_new@249[251, 254] ->255


Starting Compiler...
__TEMP @4  buffer 1 to @4____
__TEMP @6  buffer 0 to @6____
__TEMP @9  buffer 2 to @9____
__TEMP @12  buffer 3 to @12____
___NATIVE_FUNCDECL___%println : function println[id=10 name=object] ->13 : native 12
___ARG_PUSH___id=10 name=object
___END %println : function println[id=10 name=object] ->13 : native 12 ___
__TEMP @15  buffer 4 to @15____
___NATIVE_FUNCDECL___%input : function input[] ->16 : native 15
___END %input : function input[] ->16 : native 15 ___
__TEMP @18  buffer 5 to @18____
__TEMP @20  buffer 6 to @20____
__TEMP @22  buffer 7 to @22____
__TEMP @25  buffer 8 to @25____
___FUNCDECL___%mul : function mul[id=28 name=a, id=29 name=b] ->27 :
___ARG_PUSH___id=28 name=a
___ARG_PUSH___id=29 name=b
__END @32  RETURN(37) @31 ->32___
___END %mul : function mul[id=28 name=a, id=29 name=b] ->27 : ___
___FUNCDECL___%quad : function quad[id=34 name=a, id=35 name=b, id=36 name=c, id=37 name=x] ->33 :
___ARG_PUSH___id=34 name=a
___ARG_PUSH___id=35 name=b
___ARG_PUSH___id=36 name=c
___ARG_PUSH___id=37 name=x
__TEMP @40  buffer 9 to @40____
__END @46  RETURN(37) @45 ->46___
___END %quad : function quad[id=34 name=a, id=35 name=b, id=36 name=c, id=37 name=x] ->33 : ___
___FUNCDECL___%makeSquare : function makeSquare[id=48 name=width, id=49 name=height] ->47 :
___ARG_PUSH___id=48 name=width
___ARG_PUSH___id=49 name=height
__CALL_PREPARE @51  mul@27[48, 49] ->51__
____PUSH_ARG 48____
____PUSH_ARG 49____
__CALL @51  mul@27[48, 49] ->51__
__END @53  RETURN(37) @52 ->53___
___END %makeSquare : function makeSquare[id=48 name=width, id=49 name=height] ->47 : ___
___FUNCDECL___%switchWH : function switchWH[id=55 name=square] ->54 :
___ARG_PUSH___id=55 name=square
__TEMP @59  buffer 0 to @59____
__TEMP @62  buffer 1 to @62____
__FLAG !65  Flag BREAKIF(57) 64
__END @66  RETURN(37) @55 ->66___
__FLAG !67  Flag END(54) 56
__TEMP @71  buffer 0 to @71____
__TEMP @74  buffer 0 to @74____
__TEMP @77  buffer 1 to @77____
__TEMP @81  buffer 0 to @81____
__FLAG !83  Flag BREAKIF(57) 82
__END @84  RETURN(37) @55 ->84___
__FLAG !85  Flag END(54) 68
__TEMP @88  buffer 10 to @88____
__CALL_PREPARE @89  println@13[88] ->89__
____PUSH_ARG 88____
__CALL @89  println@13[88] ->89__
__TEMP @91  buffer 0 to @91____
__TEMP @94  buffer 1 to @94____
__END @97  RETURN(37) @55 ->97___
___END %switchWH : function switchWH[id=55 name=square] ->54 : ___
___FUNCDECL___%isNegative : function isNegative[id=99 name=number] ->98 :
___ARG_PUSH___id=99 name=number
__END @102  NEG(10) @99 ->102___
__FLAG !104  Flag BREAKIF(57) 103
__END @106  RETURN(37) @5 ->106___
__FLAG !107  Flag END(54) 100
__END @110  RETURN(37) @7 ->110___
___END %isNegative : function isNegative[id=99 name=number] ->98 : ___
___FUNCDECL___%loop : function loop[id=112 name=from, id=113 name=to, id=114 name=step] ->111 :
___ARG_PUSH___id=112 name=from
___ARG_PUSH___id=113 name=to
___ARG_PUSH___id=114 name=step
__TEMP @118  buffer 0 to @118____
__WHILE ^120  while ->120 :___
__FLAG !122  Flag BREAKIF(57) 121
__FLAG !125  Flag END(54) 115
__END ^120  while ->120 :__
__END @126  RETURN(37) @119 ->126___
___END %loop : function loop[id=112 name=from, id=113 name=to, id=114 name=step] ->111 : ___
___FUNCDECL___%say : function say[id=128 name=something] ->127 :
___ARG_PUSH___id=128 name=something
__END @131  RETURN(37) @130 ->131___
___END %say : function say[id=128 name=something] ->127 : ___
___FUNCDECL___%newCat : function newCat[id=133 name=name, id=134 name=age] ->132 :
___ARG_PUSH___id=133 name=name
___ARG_PUSH___id=134 name=age
__START OBJECT @136  object ->136 :__
__FLAG !137  Flag START_PAIR(59) 
__TEMP @139  buffer 11 to @139____
__FLAG !140  Flag KEY(60) 139
__FLAG !141  Flag VALUE(61) 133
__FLAG !142  Flag END_PAIR(62) 
__FLAG !143  Flag START_PAIR(59) 
__TEMP @145  buffer 12 to @145____
__FLAG !146  Flag KEY(60) 145
__FLAG !147  Flag VALUE(61) 134
__FLAG !148  Flag END_PAIR(62) 
__FLAG !149  Flag START_PAIR(59) 
__TEMP @151  buffer 13 to @151____
__FLAG !152  Flag KEY(60) 151
__TEMP @154  buffer 9 to @154____
__FLAG !155  Flag VALUE(61) 154
__FLAG !156  Flag END_PAIR(62) 
__FLAG !157  Flag START_PAIR(59) 
___FUNCDECL___%meow : function meow[] ->158 :
__TEMP @161  buffer 11 to @161____
__TEMP @164  buffer 14 to @164____
__CALL_PREPARE @166  println@13[165] ->166__
____PUSH_ARG 165____
__CALL @166  println@13[165] ->166__
___END %meow : function meow[] ->158 : ___
__TEMP @168  buffer 15 to @168____
__FLAG !169  Flag KEY(60) 168
__FLAG !170  Flag VALUE(61) 158
__FLAG !171  Flag END_PAIR(62) 
__END OBJECT @136  object ->136 :__
__END @172  RETURN(37) @136 ->172___
___END %newCat : function newCat[id=133 name=name, id=134 name=age] ->132 : ___
___FUNCDECL___%testOverload : function testOverload[id=174 name=a, id=175 name=b] ->173 :
___ARG_PUSH___id=174 name=a
___ARG_PUSH___id=175 name=b
__TEMP @178  buffer 16 to @178____
__END @181  RETURN(37) @180 ->181___
___END %testOverload : function testOverload[id=174 name=a, id=175 name=b] ->173 : ___
___FUNCDECL___%testOverload : function testOverload[id=183 name=c, id=184 name=d, id=185 name=b] ->182 :
___ARG_PUSH___id=183 name=c
___ARG_PUSH___id=184 name=d
___ARG_PUSH___id=185 name=b
__END @189  RETURN(37) @188 ->189___
___END %testOverload : function testOverload[id=183 name=c, id=184 name=d, id=185 name=b] ->182 : ___
___FUNCDECL___%testOverload : function testOverload[id=191 name=x] ->190 :
___ARG_PUSH___id=191 name=x
__TEMP @194  buffer 9 to @194____
__END @196  RETURN(37) @195 ->196___
___END %testOverload : function testOverload[id=191 name=x] ->190 : ___
___FUNCDECL___%testTryCatch : function testTryCatch[id=198 name=a, id=199 name=b] ->197 :
___ARG_PUSH___id=198 name=a
___ARG_PUSH___id=199 name=b
___TRY ^201  try ->201 :___
__FLAG !202  Flag TRY_START(64) 
__END @205  RETURN(37) @204 ->205___
__FLAG !206  Flag TRY_END(65) 
__FLAG !208  Flag CATCH_ID(66) 207
__FLAG !209  Flag CATCH_START(67) 
__CALL_PREPARE @211  println@13[207] ->211__
____PUSH_ARG 207____
__CALL @211  println@13[207] ->211__
__FLAG !212  Flag CATCH_END(68) 
__FLAG !213  Flag FINALLY(69) 201
__TEMP @216  buffer 17 to @216____
__CALL_PREPARE @217  println@13[216] ->217__
____PUSH_ARG 216____
__CALL @217  println@13[216] ->217__
__END TRY ^201  try ->201 :__
___END %testTryCatch : function testTryCatch[id=198 name=a, id=199 name=b] ->197 : ___
__TEMP @219  buffer 18 to @219____
__TEMP @221  buffer 19 to @221____
__CALL_PREPARE @222  makeSquare@47[219, 221] ->222__
____PUSH_ARG 219____
____PUSH_ARG 221____
__CALL @222  makeSquare@47[219, 221] ->222__
__CALL_PREPARE @225  square=switchWH@224[223] ->225__
____PUSH_ARG 223____
__CALL @225  square=switchWH@224[223] ->225__
__CALL_PREPARE @226  println@13[223] ->226__
____PUSH_ARG 223____
__CALL @226  println@13[223] ->226__
__TEMP @228  buffer 9 to @228____
__TEMP @230  buffer 20 to @230____
__TEMP @232  buffer 21 to @232____
__CALL_PREPARE @233  testOverload@173[228, 230, 232] ->233__
____PUSH_ARG 228____
____PUSH_ARG 230____
____PUSH_ARG 232____
__CALL @233  testOverload@173[228, 230, 232] ->233__
__TEMP @235  buffer 1 to @235____
__TEMP @237  buffer 22 to @237____
__CALL_PREPARE @238  testOverload@173[235, 237] ->238__
____PUSH_ARG 235____
____PUSH_ARG 237____
__CALL @238  testOverload@173[235, 237] ->238__
__TEMP @240  buffer 23 to @240____
__CALL_PREPARE @241  testOverload@173[240] ->241__
____PUSH_ARG 240____
__CALL @241  testOverload@173[240] ->241__
__TEMP @243  buffer 21 to @243____
__TEMP @245  buffer 9 to @245____
__TEMP @247  buffer 20 to @247____
__CALL_PREPARE @248  testOverload@173[243, 245, 247] ->248__
____PUSH_ARG 243____
____PUSH_ARG 245____
____PUSH_ARG 247____
__CALL @248  testOverload@173[243, 245, 247] ->248__
__TEMP @251  buffer 24 to @251____
__TEMP @253  buffer 25 to @253____
__CALL_PREPARE @255  java->java_new@249[251, 254] ->255__
____PUSH_ARG 251____
____PUSH_ARG 254____
__CALL @255  java->java_new@249[251, 254] ->255__
