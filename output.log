Parsed file test/test.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:4 ms.
ID:java
File test/test.erable finished.Total time:579 ms.
ConstantPoolElement{id=0, obj=0}
ConstantPoolElement{id=1, obj=1}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=java.lang.System#out#println}
ConstantPoolElement{id=4, obj=com.qiufeng.erable.stdlib.InputScanner#input}
ConstantPoolElement{id=5, obj=stdlib/ios.erable}
ConstantPoolElement{id=6, obj=stdlib/java.ec}
ConstantPoolElement{id=7, obj=stdlib/java.dynec}
ConstantPoolElement{id=8, obj=hi}
ConstantPoolElement{id=9, obj=2}
ConstantPoolElement{id=10, obj=qualified!}
ConstantPoolElement{id=11, obj=name}
ConstantPoolElement{id=12, obj=age}
ConstantPoolElement{id=13, obj=habits}
ConstantPoolElement{id=14, obj=says:MEOWWWWWW}
ConstantPoolElement{id=15, obj=meow}
ConstantPoolElement{id=16, obj=divide ended.}
ConstantPoolElement{id=17, obj=15}
ConstantPoolElement{id=18, obj=20}
ConstantPoolElement{id=19, obj=java.lang.String}
ConstantPoolElement{id=20, obj=abc}
00000000    >#0 :
00000001    -->|ConstantPool

00000002    -->@2  buffer 1 to @2

00000003    -->%true : variable `0` true = @2 ->3

00000004    -->@4  buffer 0 to @4

00000005    -->%false : variable `0` false = @4 ->5

00000006    -->@6  buffer 2 to @6

00000007    -->%println : function println[id=8 name=object] returns 9 ->7 : native 10
00000010    ---->@10  buffer 3 to @10


00000011    -->%input : function input[] returns 12 ->11 : native 13
00000013    ---->@13  buffer 4 to @13


00000014    -->@14  buffer 5 to @14

00000015    -->@15  buffer 6 to @15

00000016    -->@16  buffer 7 to @16

00000017    -->%java  Dynamic Load Module: stdlib/java.ec, Table: stdlib/java.dynec, as 17 with name java

00000018    -->@18  buffer 8 to @18

00000019    -->%prefix : variable `0` prefix = @18 ->19

00000020    -->%mul : function mul[id=21 name=a, id=22 name=b] returns 23 ->20 :
00000024    ---->#24 :
00000025    ------>@25  @21 MUL(6) @22 ->25

00000027    ------>@27  @0 EQU(23) @25 ->27



00000028    -->%quad : function quad[id=29 name=a, id=30 name=b, id=31 name=c, id=32 name=x] returns 33 ->28 :
00000034    ---->#34 :
00000035    ------>@35  buffer 9 to @35

00000036    ------>@36  @29 POW(9) @35 ->36

00000037    ------>%power : variable `1` power = @36 ->37

00000038    ------>@38  @37 ADD(4) @30 ->38

00000039    ------>@39  @38 MUL(6) @32 ->39

00000040    ------>@40  @39 ADD(4) @31 ->40

00000042    ------>@42  @0 EQU(23) @40 ->42



00000043    -->%makeSquare : function makeSquare[id=44 name=width, id=45 name=height] returns 46 ->43 :
00000047    ---->#47 :
00000048    ------>@48  mul@20[44, 45] ->48

00000049    ------>@49  Array [44, 45, 48] ->49

00000051    ------>@51  @0 EQU(23) @49 ->51



00000052    -->%switchWH : function switchWH[id=53 name=square] returns 54 ->52 :
00000055    ---->#55 :
00000056    ------>^56  if ->56
00000057    -------->@57  buffer 0 to @57

00000058    -------->@58  @53 ELEMENT(12) @57 ->58

00000059    -------->@59  buffer 1 to @59

00000060    -------->@60  @53 ELEMENT(12) @59 ->60

00000061    -------->@61  @58 EQ(21) @60 ->61

00000062    -------->!62  Flag BREAKIF(52) [61]

00000064    -------->@64  @0 EQU(23) @53 ->64

00000065    -------->!65  Flag END(51) [55]

00000066    -------->^66  else ->66
00000067    ---------->^67  if ->67
00000068    ------------>@68  buffer 0 to @68

00000069    ------------>@69  @53 ELEMENT(12) @68 ->69

00000070    ------------>@70  buffer 0 to @70

00000071    ------------>@71  @69 EQ(21) @70 ->71

00000072    ------------>@72  buffer 1 to @72

00000073    ------------>@73  @53 ELEMENT(12) @72 ->73

00000074    ------------>@74  @71 BOR(27) @73 ->74

00000075    ------------>@75  buffer 0 to @75

00000076    ------------>@76  @74 EQ(21) @75 ->76

00000077    ------------>!77  Flag BREAKIF(52) [76]

00000079    ------------>@79  @0 EQU(23) @53 ->79

00000080    ------------>!80  Flag END(51) [66]

00000081    ------------>^81  else ->81
00000082    -------------->@82  buffer 10 to @82

00000083    -------------->@83  println@7[82] ->83





00000084    ------>@84  buffer 0 to @84

00000085    ------>@85  @53 ELEMENT(12) @84 ->85

00000086    ------>@86  buffer 1 to @86

00000087    ------>@87  @53 ELEMENT(12) @86 ->87

00000088    ------>@88  @85 SWITCH(24) @87 ->88

00000090    ------>@90  @0 EQU(23) @53 ->90



00000091    -->%isNegative : function isNegative[id=92 name=number] returns 93 ->91 :
00000094    ---->#94 :
00000095    ------>^95  if ->95
00000096    -------->@96  NEG(11) @92 ->96

00000097    -------->@97  @96 EQ(21) @92 ->97

00000098    -------->!98  Flag BREAKIF(52) [97]

00000099    -------->#99 :
00000101    ---------->@101  @0 EQU(23) @3 ->101


00000102    -------->!102  Flag END(51) [94]

00000103    -------->^103  else ->103
00000104    ---------->#104 :
00000106    ------------>@106  @0 EQU(23) @5 ->106






00000107    -->%loop : function loop[id=108 name=from, id=109 name=to, id=110 name=step] returns 111 ->107 :
00000112    ---->#112 :
00000113    ------>%a : variable `1` a = @108 ->113

00000114    ------>@114  buffer 0 to @114

00000115    ------>%count : variable `1` count = @114 ->115

00000116    ------>^116  while ->116 :
00000117    -------->@117  @113 LT(17) @109 ->117

00000118    -------->!118  Flag BREAKIF(52) [117]

00000119    -------->#119 :
00000120    ---------->@120  @113 ADD(4) @110 ->120

00000121    ---------->@121  @113 EQU(23) @120 ->121


00000122    -------->!122  Flag END(51) [112]


00000124    ------>@124  @0 EQU(23) @115 ->124



00000125    -->%say : function say[id=126 name=something] returns 127 ->125 :
00000128    ---->#128 :
00000129    ------>@129  @19 ADD(4) @126 ->129

00000131    ------>@131  @0 EQU(23) @129 ->131



00000132    -->%newCat : function newCat[id=133 name=name, id=134 name=age] returns 135 ->132 :
00000136    ---->#136 :
00000137    ------>@137  object ->137 :
00000138    -------->!138  Flag START_PAIR(55) []

00000139    -------->@139  buffer 11 to @139

00000140    -------->!140  Flag KEY(56) [139]

00000141    -------->!141  Flag VALUE(57) [133]

00000142    -------->!142  Flag END_PAIR(58) []

00000143    -------->!143  Flag START_PAIR(55) []

00000144    -------->@144  buffer 12 to @144

00000145    -------->!145  Flag KEY(56) [144]

00000146    -------->!146  Flag VALUE(57) [134]

00000147    -------->!147  Flag END_PAIR(58) []

00000148    -------->!148  Flag START_PAIR(55) []

00000149    -------->@149  buffer 13 to @149

00000150    -------->!150  Flag KEY(56) [149]

00000151    -------->@151  buffer 9 to @151

00000152    -------->!152  Flag VALUE(57) [151]

00000153    -------->!153  Flag END_PAIR(58) []

00000154    -------->!154  Flag START_PAIR(55) []

00000155    -------->%meow : function meow[] returns 156 ->155 :
00000157    ---------->#157 :
00000158    ------------>@158  buffer 11 to @158

00000159    ------------>@159  @137 ELEMENT(12) @158 ->159

00000160    ------------>@160  buffer 14 to @160

00000161    ------------>@161  @159 ADD(4) @160 ->161

00000162    ------------>@162  println@7[161] ->162



00000163    -------->@163  buffer 15 to @163

00000164    -------->!164  Flag KEY(56) [163]

00000165    -------->!165  Flag VALUE(57) [155]

00000166    -------->!166  Flag END_PAIR(58) []


00000168    ------>@168  @0 EQU(23) @137 ->168



00000169    -->%testTryCatch : function testTryCatch[id=170 name=a, id=171 name=b] returns 172 ->169 :
00000173    ---->#173 :
00000174    ------>%e : variable `0` e = @5 ->174

00000175    ------>^175  try ->175 :

00000176    -------->#176 :
00000177    ---------->#177 :
00000178    ------------>@178  @170 DIV(7) @171 ->178

00000180    ------------>@180  @0 EQU(23) @178 ->180



00000181    -------->#181 :
00000182    ---------->#182 :
00000183    ------------>@183  println@7[174] ->183



00000184    -------->#184 :
00000185    ---------->#185 :
00000186    ------------>@186  buffer 16 to @186

00000187    ------------>@187  println@7[186] ->187





00000188    -->@188  buffer 17 to @188

00000189    -->@189  buffer 18 to @189

00000190    -->@190  makeSquare@43[188, 189] ->190

00000191    -->%square : variable `0` square = @190 ->191

00000192    -->@192  @191 EQU(23) @52 ->192

00000193    -->@193  square=switchWH@192[191] ->193

00000194    -->@194  println@7[191] ->194

00000195    -->@195  Module @17 Accessing: @6 to ID 195

00000196    -->@196  buffer 19 to @196

00000197    -->@197  buffer 20 to @197

00000198    -->@198  Array [197] ->198

00000199    -->@199  java->java_new@195[196, 198] ->199


Compilation started...
