Parsed file test.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:5 ms.
Parsed file stdlib/java.erable
File stdlib/java.erable finished.Total time:2 ms.
File test.erable finished.Total time:765 ms.
ConstantPoolElement{id=0, obj=0.0}
ConstantPoolElement{id=1, obj=1.0}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=java.lang.System#out#println}
ConstantPoolElement{id=4, obj=com.qiufeng.erable.stdlib.InputScanner#input}
ConstantPoolElement{id=5, obj=stdlib/ios.erable}
ConstantPoolElement{id=6, obj=stdlib/java}
ConstantPoolElement{id=7, obj=com.qiufeng.erable.stdlib.Reflector#newInstance}
ConstantPoolElement{id=8, obj=com.qiufeng.erable.stdlib.Reflector#call}
ConstantPoolElement{id=9, obj=com.qiufeng.erable.stdlib.Reflector#callStatic}
ConstantPoolElement{id=10, obj=com.qiufeng.erable.stdlib.Reflector#get}
ConstantPoolElement{id=11, obj=com.qiufeng.erable.stdlib.Reflector#getStatic}
ConstantPoolElement{id=12, obj=hi}
ConstantPoolElement{id=13, obj=2.0}
ConstantPoolElement{id=14, obj=qualified!}
ConstantPoolElement{id=15, obj=name}
ConstantPoolElement{id=16, obj=age}
ConstantPoolElement{id=17, obj=habits}
ConstantPoolElement{id=18, obj=says:MEOWWWWWW}
ConstantPoolElement{id=19, obj=meow}
ConstantPoolElement{id=20, obj=hi~}
ConstantPoolElement{id=21, obj=divide ended.}
ConstantPoolElement{id=22, obj=15.0}
ConstantPoolElement{id=23, obj=20.0}
ConstantPoolElement{id=24, obj=3.0}
ConstantPoolElement{id=25, obj=5.0}
ConstantPoolElement{id=26, obj=4.0}
ConstantPoolElement{id=27, obj=9.0}
>#0 :
-->|ConstantPool

-->@4  buffer 1 to @4

-->%true : variable `0` true = @4 ->5

-->@6  buffer 0 to @6

-->%false : variable `0` false = @6 ->7

-->@9  buffer 2 to @9

-->@12  buffer 3 to @12

-->%println : function println[id=10 name=object] ->13 : native 12

-->@15  buffer 4 to @15

-->%input : function input[] ->16 : native 15

-->@18  buffer 5 to @18

-->@20  buffer 6 to @20

-->@24  buffer 7 to @24

-->%java_new : function java_new[id=21 name=className, id=22 name=args] ->25 : native 24

-->@30  buffer 8 to @30

-->%java_call : function java_call[id=26 name=object, id=27 name=methodName, id=28 name=args] ->31 : native 30

-->@36  buffer 9 to @36

-->%java_call_static : function java_call_static[id=32 name=className, id=33 name=methodName, id=34 name=args] ->37 : native 36

-->@41  buffer 10 to @41

-->%java_get : function java_get[id=38 name=object, id=39 name=field] ->42 : native 41

-->@46  buffer 11 to @46

-->%java_get_static : function java_get_static[id=43 name=className, id=44 name=field] ->47 : native 46

-->@49  buffer 12 to @49

-->%prefix : variable `0` prefix = @49 ->50

-->%mul : function mul[id=52 name=a, id=53 name=b] ->51 :
---->#54 :
------>@55  @52 MUL(5) @53 ->55

------>@56  RETURN(37) @55 ->56



-->%quad : function quad[id=58 name=a, id=59 name=b, id=60 name=c, id=61 name=x] ->57 :
---->#62 :
------>@64  buffer 13 to @64

------>@65  @58 POW(8) @64 ->65

------>%power : variable `1` power = @65 ->66

------>@67  @66 ADD(3) @59 ->67

------>@68  @67 MUL(5) @61 ->68

------>@69  @68 ADD(3) @60 ->69

------>@70  RETURN(37) @69 ->70



-->%makeSquare : function makeSquare[id=72 name=width, id=73 name=height] ->71 :
---->#74 :
------>@75  mul@51[72, 73] ->75

------>@76  Array [72, 73, 75] ->76

------>@77  RETURN(37) @76 ->77



-->%switchWH : function switchWH[id=79 name=square] ->78 :
---->#80 :
------>^81  if ->81
-------->@83  buffer 0 to @83

-------->@84  @79 ELEMENT(11) @83 ->84

-------->@86  buffer 1 to @86

-------->@87  @79 ELEMENT(11) @86 ->87

-------->@88  @84 EQ(20) @87 ->88

-------->!89  Flag BREAKIF(57) 88

-------->@90  RETURN(37) @79 ->90

-------->!91  Flag END(54) 80

-------->^92  else ->92
---------->^93  if ->93
------------>@95  buffer 0 to @95

------------>@96  @79 ELEMENT(11) @95 ->96

------------>@98  buffer 0 to @98

------------>@99  @96 EQ(20) @98 ->99

------------>@101  buffer 1 to @101

------------>@102  @79 ELEMENT(11) @101 ->102

------------>@103  @99 BOR(26) @102 ->103

------------>@105  buffer 0 to @105

------------>@106  @103 EQ(20) @105 ->106

------------>!107  Flag BREAKIF(57) 106

------------>@108  RETURN(37) @79 ->108

------------>!109  Flag END(54) 92

------------>^110  else ->110
-------------->@112  buffer 14 to @112

-------------->@113  println@13[112] ->113





------>@115  buffer 0 to @115

------>@116  @79 ELEMENT(11) @115 ->116

------>@118  buffer 1 to @118

------>@119  @79 ELEMENT(11) @118 ->119

------>@120  @116 SWITCH(23) @119 ->120

------>@121  RETURN(37) @79 ->121



-->%isNegative : function isNegative[id=123 name=number] ->122 :
---->#124 :
------>^125  if ->125
-------->@126  NEG(10) @123 ->126

-------->@127  @126 EQ(20) @123 ->127

-------->!128  Flag BREAKIF(57) 127

-------->#129 :
---------->@130  RETURN(37) @5 ->130


-------->!131  Flag END(54) 124

-------->^132  else ->132
---------->#133 :
------------>@134  RETURN(37) @7 ->134






-->%loop : function loop[id=136 name=from, id=137 name=to, id=138 name=step] ->135 :
---->#139 :
------>%a : variable `1` a = @136 ->140

------>@142  buffer 0 to @142

------>%count : variable `1` count = @142 ->143

------>^144  while ->144 :
-------->@145  @140 LT(16) @137 ->145

-------->!146  Flag BREAKIF(57) 145

-------->#147 :
---------->@148  @140 ADDEQ(28) @138 ->148


-------->!149  Flag END(54) 139


------>@150  RETURN(37) @143 ->150



-->%say : function say[id=152 name=something] ->151 :
---->#153 :
------>@154  @50 ADD(3) @152 ->154

------>@155  RETURN(37) @154 ->155



-->%newCat : function newCat[id=157 name=name, id=158 name=age] ->156 :
---->#159 :
------>@160  object ->160 :
-------->!161  Flag START_PAIR(59) 

-------->@163  buffer 15 to @163

-------->!164  Flag KEY(60) 163

-------->!165  Flag VALUE(61) 157

-------->!166  Flag END_PAIR(62) 

-------->!167  Flag START_PAIR(59) 

-------->@169  buffer 16 to @169

-------->!170  Flag KEY(60) 169

-------->!171  Flag VALUE(61) 158

-------->!172  Flag END_PAIR(62) 

-------->!173  Flag START_PAIR(59) 

-------->@175  buffer 17 to @175

-------->!176  Flag KEY(60) 175

-------->@178  buffer 13 to @178

-------->!179  Flag VALUE(61) 178

-------->!180  Flag END_PAIR(62) 

-------->!181  Flag START_PAIR(59) 

-------->%meow : function meow[] ->182 :
---------->#183 :
------------>@185  buffer 15 to @185

------------>@186  @160 ELEMENT(11) @185 ->186

------------>@188  buffer 18 to @188

------------>@189  @186 ADD(3) @188 ->189

------------>@190  println@13[189] ->190



-------->@192  buffer 19 to @192

-------->!193  Flag KEY(60) 192

-------->!194  Flag VALUE(61) 182

-------->!195  Flag END_PAIR(62) 


------>@196  RETURN(37) @160 ->196



-->%testOverload : function testOverload[id=198 name=a, id=199 name=b] ->197 :
---->#200 :
------>@202  buffer 20 to @202

------>@203  @202 ADD(3) @198 ->203

------>@204  @203 ADD(3) @199 ->204

------>@205  RETURN(37) @204 ->205



-->%testOverload : function testOverload[id=207 name=c, id=208 name=d, id=209 name=b] ->206 :
---->#210 :
------>@211  @207 MUL(5) @209 ->211

------>@212  @211 MUL(5) @208 ->212

------>@213  RETURN(37) @212 ->213



-->%testOverload : function testOverload[id=215 name=x] ->214 :
---->#216 :
------>@218  buffer 13 to @218

------>@219  @215 POW(8) @218 ->219

------>@220  RETURN(37) @219 ->220



-->%testTryCatch : function testTryCatch[id=222 name=a, id=223 name=b] ->221 :
---->#224 :
------>^225  try ->225 :
-------->!226  Flag TRY_START(64) 

-------->#227 :
---------->@228  @222 DIV(6) @223 ->228

---------->@229  RETURN(37) @228 ->229


-------->!230  Flag TRY_END(65) 

-------->!232  Flag CATCH_ID(66) 231

-------->!233  Flag CATCH_START(67) 

-------->#234 :
---------->@235  println@13[231] ->235


-------->!236  Flag CATCH_END(68) 

-------->!237  Flag FINALLY(69) 225

-------->#238 :
---------->@240  buffer 21 to @240

---------->@241  println@13[240] ->241





-->@243  buffer 22 to @243

-->@245  buffer 23 to @245

-->@246  makeSquare@71[243, 245] ->246

-->%square : variable `0` square = @246 ->247

-->@248  switchWH@78[247] ->248

-->@249  @247 EQU(22) @248 ->249

-->@250  println@13[247] ->250

-->@252  buffer 13 to @252

-->@254  buffer 24 to @254

-->@256  buffer 25 to @256

-->@257  testOverload@206[252, 254, 256] ->257

-->@259  buffer 1 to @259

-->@261  buffer 26 to @261

-->@262  testOverload@197[259, 261] ->262

-->@264  buffer 27 to @264

-->@265  testOverload@214[264] ->265

-->@267  buffer 25 to @267

-->@269  buffer 13 to @269

-->@271  buffer 24 to @271

-->@272  testOverload@206[267, 269, 271] ->272


Starting Compiler...
__TEMP @4  buffer 1 to @4____
__TEMP @6  buffer 0 to @6____
__TEMP @9  buffer 2 to @9____
__TEMP @12  buffer 3 to @12____
___NATIVE_FUNCDECL___%println : function println[id=10 name=object] ->13 : native 12
___ARG_PUSH___id=10 name=object
___END %println : function println[id=10 name=object] ->13 : native 12 ___
__TEMP @15  buffer 4 to @15____
___NATIVE_FUNCDECL___%input : function input[] ->16 : native 15
___END %input : function input[] ->16 : native 15 ___
__TEMP @18  buffer 5 to @18____
__TEMP @20  buffer 6 to @20____
__TEMP @24  buffer 7 to @24____
___NATIVE_FUNCDECL___%java_new : function java_new[id=21 name=className, id=22 name=args] ->25 : native 24
___ARG_PUSH___id=21 name=className
___ARG_PUSH___id=22 name=args
___END %java_new : function java_new[id=21 name=className, id=22 name=args] ->25 : native 24 ___
__TEMP @30  buffer 8 to @30____
___NATIVE_FUNCDECL___%java_call : function java_call[id=26 name=object, id=27 name=methodName, id=28 name=args] ->31 : native 30
___ARG_PUSH___id=26 name=object
___ARG_PUSH___id=27 name=methodName
___ARG_PUSH___id=28 name=args
___END %java_call : function java_call[id=26 name=object, id=27 name=methodName, id=28 name=args] ->31 : native 30 ___
__TEMP @36  buffer 9 to @36____
___NATIVE_FUNCDECL___%java_call_static : function java_call_static[id=32 name=className, id=33 name=methodName, id=34 name=args] ->37 : native 36
___ARG_PUSH___id=32 name=className
___ARG_PUSH___id=33 name=methodName
___ARG_PUSH___id=34 name=args
___END %java_call_static : function java_call_static[id=32 name=className, id=33 name=methodName, id=34 name=args] ->37 : native 36 ___
__TEMP @41  buffer 10 to @41____
___NATIVE_FUNCDECL___%java_get : function java_get[id=38 name=object, id=39 name=field] ->42 : native 41
___ARG_PUSH___id=38 name=object
___ARG_PUSH___id=39 name=field
___END %java_get : function java_get[id=38 name=object, id=39 name=field] ->42 : native 41 ___
__TEMP @46  buffer 11 to @46____
___NATIVE_FUNCDECL___%java_get_static : function java_get_static[id=43 name=className, id=44 name=field] ->47 : native 46
___ARG_PUSH___id=43 name=className
___ARG_PUSH___id=44 name=field
___END %java_get_static : function java_get_static[id=43 name=className, id=44 name=field] ->47 : native 46 ___
__TEMP @49  buffer 12 to @49____
___FUNCDECL___%mul : function mul[id=52 name=a, id=53 name=b] ->51 :
___ARG_PUSH___id=52 name=a
___ARG_PUSH___id=53 name=b
__END @56  RETURN(37) @55 ->56___
___END %mul : function mul[id=52 name=a, id=53 name=b] ->51 : ___
___FUNCDECL___%quad : function quad[id=58 name=a, id=59 name=b, id=60 name=c, id=61 name=x] ->57 :
___ARG_PUSH___id=58 name=a
___ARG_PUSH___id=59 name=b
___ARG_PUSH___id=60 name=c
___ARG_PUSH___id=61 name=x
__TEMP @64  buffer 13 to @64____
__END @70  RETURN(37) @69 ->70___
___END %quad : function quad[id=58 name=a, id=59 name=b, id=60 name=c, id=61 name=x] ->57 : ___
___FUNCDECL___%makeSquare : function makeSquare[id=72 name=width, id=73 name=height] ->71 :
___ARG_PUSH___id=72 name=width
___ARG_PUSH___id=73 name=height
__CALL_PREPARE @75  mul@51[72, 73] ->75__
____PUSH_ARG 72____
____PUSH_ARG 73____
__CALL @75  mul@51[72, 73] ->75__
__END @77  RETURN(37) @76 ->77___
___END %makeSquare : function makeSquare[id=72 name=width, id=73 name=height] ->71 : ___
___FUNCDECL___%switchWH : function switchWH[id=79 name=square] ->78 :
___ARG_PUSH___id=79 name=square
__TEMP @83  buffer 0 to @83____
__TEMP @86  buffer 1 to @86____
__FLAG !89  Flag BREAKIF(57) 88
__END @90  RETURN(37) @79 ->90___
__FLAG !91  Flag END(54) 80
__TEMP @95  buffer 0 to @95____
__TEMP @98  buffer 0 to @98____
__TEMP @101  buffer 1 to @101____
__TEMP @105  buffer 0 to @105____
__FLAG !107  Flag BREAKIF(57) 106
__END @108  RETURN(37) @79 ->108___
__FLAG !109  Flag END(54) 92
__TEMP @112  buffer 14 to @112____
__CALL_PREPARE @113  println@13[112] ->113__
____PUSH_ARG 112____
__CALL @113  println@13[112] ->113__
__TEMP @115  buffer 0 to @115____
__TEMP @118  buffer 1 to @118____
__END @121  RETURN(37) @79 ->121___
___END %switchWH : function switchWH[id=79 name=square] ->78 : ___
___FUNCDECL___%isNegative : function isNegative[id=123 name=number] ->122 :
___ARG_PUSH___id=123 name=number
__END @126  NEG(10) @123 ->126___
__FLAG !128  Flag BREAKIF(57) 127
__END @130  RETURN(37) @5 ->130___
__FLAG !131  Flag END(54) 124
__END @134  RETURN(37) @7 ->134___
___END %isNegative : function isNegative[id=123 name=number] ->122 : ___
___FUNCDECL___%loop : function loop[id=136 name=from, id=137 name=to, id=138 name=step] ->135 :
___ARG_PUSH___id=136 name=from
___ARG_PUSH___id=137 name=to
___ARG_PUSH___id=138 name=step
__TEMP @142  buffer 0 to @142____
__WHILE ^144  while ->144 :___
__FLAG !146  Flag BREAKIF(57) 145
__FLAG !149  Flag END(54) 139
__END ^144  while ->144 :__
__END @150  RETURN(37) @143 ->150___
___END %loop : function loop[id=136 name=from, id=137 name=to, id=138 name=step] ->135 : ___
___FUNCDECL___%say : function say[id=152 name=something] ->151 :
___ARG_PUSH___id=152 name=something
__END @155  RETURN(37) @154 ->155___
___END %say : function say[id=152 name=something] ->151 : ___
___FUNCDECL___%newCat : function newCat[id=157 name=name, id=158 name=age] ->156 :
___ARG_PUSH___id=157 name=name
___ARG_PUSH___id=158 name=age
__START OBJECT @160  object ->160 :__
__FLAG !161  Flag START_PAIR(59) 
__TEMP @163  buffer 15 to @163____
__FLAG !164  Flag KEY(60) 163
__FLAG !165  Flag VALUE(61) 157
__FLAG !166  Flag END_PAIR(62) 
__FLAG !167  Flag START_PAIR(59) 
__TEMP @169  buffer 16 to @169____
__FLAG !170  Flag KEY(60) 169
__FLAG !171  Flag VALUE(61) 158
__FLAG !172  Flag END_PAIR(62) 
__FLAG !173  Flag START_PAIR(59) 
__TEMP @175  buffer 17 to @175____
__FLAG !176  Flag KEY(60) 175
__TEMP @178  buffer 13 to @178____
__FLAG !179  Flag VALUE(61) 178
__FLAG !180  Flag END_PAIR(62) 
__FLAG !181  Flag START_PAIR(59) 
___FUNCDECL___%meow : function meow[] ->182 :
__TEMP @185  buffer 15 to @185____
__TEMP @188  buffer 18 to @188____
__CALL_PREPARE @190  println@13[189] ->190__
____PUSH_ARG 189____
__CALL @190  println@13[189] ->190__
___END %meow : function meow[] ->182 : ___
__TEMP @192  buffer 19 to @192____
__FLAG !193  Flag KEY(60) 192
__FLAG !194  Flag VALUE(61) 182
__FLAG !195  Flag END_PAIR(62) 
__END OBJECT @160  object ->160 :__
__END @196  RETURN(37) @160 ->196___
___END %newCat : function newCat[id=157 name=name, id=158 name=age] ->156 : ___
___FUNCDECL___%testOverload : function testOverload[id=198 name=a, id=199 name=b] ->197 :
___ARG_PUSH___id=198 name=a
___ARG_PUSH___id=199 name=b
__TEMP @202  buffer 20 to @202____
__END @205  RETURN(37) @204 ->205___
___END %testOverload : function testOverload[id=198 name=a, id=199 name=b] ->197 : ___
___FUNCDECL___%testOverload : function testOverload[id=207 name=c, id=208 name=d, id=209 name=b] ->206 :
___ARG_PUSH___id=207 name=c
___ARG_PUSH___id=208 name=d
___ARG_PUSH___id=209 name=b
__END @213  RETURN(37) @212 ->213___
___END %testOverload : function testOverload[id=207 name=c, id=208 name=d, id=209 name=b] ->206 : ___
___FUNCDECL___%testOverload : function testOverload[id=215 name=x] ->214 :
___ARG_PUSH___id=215 name=x
__TEMP @218  buffer 13 to @218____
__END @220  RETURN(37) @219 ->220___
___END %testOverload : function testOverload[id=215 name=x] ->214 : ___
___FUNCDECL___%testTryCatch : function testTryCatch[id=222 name=a, id=223 name=b] ->221 :
___ARG_PUSH___id=222 name=a
___ARG_PUSH___id=223 name=b
___TRY ^225  try ->225 :___
__FLAG !226  Flag TRY_START(64) 
__END @229  RETURN(37) @228 ->229___
__FLAG !230  Flag TRY_END(65) 
__FLAG !232  Flag CATCH_ID(66) 231
__FLAG !233  Flag CATCH_START(67) 
__CALL_PREPARE @235  println@13[231] ->235__
____PUSH_ARG 231____
__CALL @235  println@13[231] ->235__
__FLAG !236  Flag CATCH_END(68) 
__FLAG !237  Flag FINALLY(69) 225
__TEMP @240  buffer 21 to @240____
__CALL_PREPARE @241  println@13[240] ->241__
____PUSH_ARG 240____
__CALL @241  println@13[240] ->241__
__END TRY ^225  try ->225 :__
___END %testTryCatch : function testTryCatch[id=222 name=a, id=223 name=b] ->221 : ___
__TEMP @243  buffer 22 to @243____
__TEMP @245  buffer 23 to @245____
__CALL_PREPARE @246  makeSquare@71[243, 245] ->246__
____PUSH_ARG 243____
____PUSH_ARG 245____
__CALL @246  makeSquare@71[243, 245] ->246__
__CALL_PREPARE @248  switchWH@78[247] ->248__
____PUSH_ARG 247____
__CALL @248  switchWH@78[247] ->248__
__CALL_PREPARE @250  println@13[247] ->250__
____PUSH_ARG 247____
__CALL @250  println@13[247] ->250__
__TEMP @252  buffer 13 to @252____
__TEMP @254  buffer 24 to @254____
__TEMP @256  buffer 25 to @256____
__CALL_PREPARE @257  testOverload@206[252, 254, 256] ->257__
____PUSH_ARG 252____
____PUSH_ARG 254____
____PUSH_ARG 256____
__CALL @257  testOverload@206[252, 254, 256] ->257__
__TEMP @259  buffer 1 to @259____
__TEMP @261  buffer 26 to @261____
__CALL_PREPARE @262  testOverload@197[259, 261] ->262__
____PUSH_ARG 259____
____PUSH_ARG 261____
__CALL @262  testOverload@197[259, 261] ->262__
__TEMP @264  buffer 27 to @264____
__CALL_PREPARE @265  testOverload@214[264] ->265__
____PUSH_ARG 264____
__CALL @265  testOverload@214[264] ->265__
__TEMP @267  buffer 25 to @267____
__TEMP @269  buffer 13 to @269____
__TEMP @271  buffer 24 to @271____
__CALL_PREPARE @272  testOverload@206[267, 269, 271] ->272__
____PUSH_ARG 267____
____PUSH_ARG 269____
____PUSH_ARG 271____
__CALL @272  testOverload@206[267, 269, 271] ->272__
