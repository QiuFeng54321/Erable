Parsed file test/instance.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:4 ms.
File test/instance.erable finished.Total time:664 ms.
ConstantPoolElement{id=0, obj=0}
ConstantPoolElement{id=1, obj=1}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=print}
ConstantPoolElement{id=4, obj=scan}
ConstantPoolElement{id=5, obj=a}
ConstantPoolElement{id=6, obj=2}
ConstantPoolElement{id=7, obj=1.2345}
ConstantPoolElement{id=8, obj=java}
ConstantPoolElement{id=9, obj=15}
ConstantPoolElement{id=10, obj=129}
ConstantPoolElement{id=11, obj=123}
ConstantPoolElement{id=12, obj=3}
ConstantPoolElement{id=13, obj=20}
ConstantPoolElement{id=14, obj=5}
ConstantPoolElement{id=15, obj=6}
ConstantPoolElement{id=16, obj=7}
ConstantPoolElement{id=17, obj=4}
ConstantPoolElement{id=18, obj=24}
ConstantPoolElement{id=19, obj=Hello World!}
ConstantPoolElement{id=20, obj=omg}
ConstantPoolElement{id=21, obj=pa=}
ConstantPoolElement{id=22, obj=It works!!!}
ConstantPoolElement{id=23, obj=pa changed into :}
ConstantPoolElement{id=24, obj=Input:}
ConstantPoolElement{id=25, obj=final: }
ConstantPoolElement{id=26, obj=, }
ConstantPoolElement{id=27, obj=8}
ConstantPoolElement{id=28, obj=9}
ConstantPoolElement{id=29, obj=name}
ConstantPoolElement{id=30, obj=William Ye}
ConstantPoolElement{id=31, obj=age}
ConstantPoolElement{id=32, obj=12}
ConstantPoolElement{id=33, obj=My name is }
ConstantPoolElement{id=34, obj=, I am }
ConstantPoolElement{id=35, obj= years old.}
ConstantPoolElement{id=36, obj=printInfo}
ConstantPoolElement{id=37, obj=Repeat current: }
00000000    >#0 :
00000001    -->|ConstantPool

00000002    -->@2  buffer 1 to @2

00000002    -->%true : variable `0` true = @2 ->2

00000003    -->@3  buffer 0 to @3

00000003    -->%false : variable `0` false = @3 ->3

00000004    -->@4  buffer 2 to @4

00000005    -->%println : function println[id=6 name=object] returns 7 ->5 : native 8
00000008    ---->@8  buffer 3 to @8


00000009    -->%scan : function scan[] returns 10 ->9 : native 11
00000011    ---->@11  buffer 4 to @11


00000012    -->@12  buffer 5 to @12

00000013    -->@13  buffer 6 to @13

00000014    -->@14  buffer 7 to @14

00000015    -->@15  buffer 8 to @15

00000015    -->%a : variable `0` a = @15 ->15

00000016    -->@16  GREF(35) @15 ->16

00000016    -->%b : variable `0` b = @16 ->16

00000017    -->@17  REF(34) @16 ->17

00000017    -->%c : variable `0` c = @17 ->17

00000018    -->@18  buffer 9 to @18

00000018    -->%d : variable `0` d = @18 ->18

00000019    -->@19  GREF(35) @18 ->19

00000019    -->%e : variable `0` e = @19 ->19

00000020    -->@20  REF(34) @19 ->20

00000021    -->@21  REF(34) @20 ->21

00000021    -->%ouch : variable `0` ouch = @21 ->21

00000022    -->@22  buffer 10 to @22

00000022    -->%num : variable `0` num = @22 ->22

00000023    -->@23  buffer 11 to @23

00000024    -->@24  @22 ADD(4) @23 ->24

00000025    -->@25  @22 EQU(21) @24 ->25

00000026    -->@26  buffer 6 to @26

00000027    -->@27  @22 DIV(7) @26 ->27

00000028    -->@28  @22 EQU(21) @27 ->28

00000029    -->@29  buffer 9 to @29

00000030    -->@30  buffer 12 to @30

00000031    -->@31  @29 MUL(6) @30 ->31

00000032    -->@32  buffer 13 to @32

00000033    -->@33  buffer 14 to @33

00000034    -->@34  @32 DIV(7) @33 ->34

00000035    -->@35  @31 SUB(5) @34 ->35

00000036    -->@36  buffer 15 to @36

00000037    -->@37  buffer 16 to @37

00000038    -->@38  @36 MOD(8) @37 ->38

00000039    -->@39  buffer 12 to @39

00000040    -->@40  buffer 17 to @40

00000041    -->@41  @39 MUL(6) @40 ->41

00000042    -->@42  @38 SUB(5) @41 ->42

00000043    -->@43  @35 ADD(4) @42 ->43

00000043    -->%num2 : variable `0` num2 = @43 ->43

00000044    -->@44  buffer 1 to @44

00000045    -->@45  buffer 6 to @45

00000046    -->@46  buffer 12 to @46

00000047    -->@47  buffer 14 to @47

00000048    -->@48  buffer 15 to @48

00000049    -->@49  buffer 17 to @49

00000050    -->@50  buffer 15 to @50

00000051    -->@51  buffer 16 to @51

00000052    -->@52  buffer 6 to @52

00000053    -->@53  Array [44, 45, 46, 47, 48, 49, 50, 51, 52] ->53

00000053    -->%arr : variable `0` arr = @53 ->53

00000054    -->@54  buffer 18 to @54

00000055    -->@55  @53 ADD(4) @54 ->55

00000056    -->@56  @53 EQU(21) @55 ->56

00000057    -->%testfunc1 : function testfunc1[id=58 name=f, id=59 name=g, id=60 name=h, id=61 name=i] returns 62 ->57 :
00000063    ---->#63 :
00000064    ------>@64  @58 ADD(4) @59 ->64

00000065    ------>@65  @64 ADD(4) @60 ->65

00000066    ------>@66  @65 ADD(4) @61 ->66

00000067    ------>@67  @62 EQU(21) @66 ->67



00000068    -->@68  buffer 6 to @68

00000069    -->@69  buffer 12 to @69

00000070    -->@70  buffer 17 to @70

00000071    -->@71  buffer 12 to @71

00000072    -->@72  testfunc1@57[68, 69, 70, 71] ->72

00000072    -->%tfs : variable `0` tfs = @72 ->72

00000073    -->@73  buffer 1 to @73

00000074    -->@74  buffer 6 to @74

00000075    -->@75  buffer 12 to @75

00000076    -->@76  buffer 17 to @76

00000077    -->@77  testfunc1@57[73, 74, 75, 76] ->77

00000078    -->@78  @72 ADD(4) @77 ->78

00000079    -->@79  @72 EQU(21) @78 ->79

00000080    -->@80  buffer 19 to @80

00000081    -->@81  println@5[80] ->81

00000082    -->@82  buffer 20 to @82

00000082    -->%pa : variable `0` pa = @82 ->82

00000083    -->@83  buffer 21 to @83

00000084    -->@84  @83 ADD(4) @82 ->84

00000085    -->@85  println@5[84] ->85

00000086    -->@86  buffer 22 to @86

00000087    -->@87  @82 EQU(21) @86 ->87

00000088    -->@88  buffer 23 to @88

00000089    -->@89  @88 ADD(4) @82 ->89

00000090    -->@90  println@5[89] ->90

00000091    -->@91  buffer 24 to @91

00000092    -->@92  println@5[91] ->92

00000093    -->%finarr : function finarr[id=94 name=a, id=95 name=b, id=96 name=c] returns 97 ->93 :
00000098    ---->#98 :
00000099    ------>@99  @95 SUB(5) @96 ->99

00000100    ------>@100  @94 ADD(4) @99 ->100

00000101    ------>@101  @97 EQU(21) @100 ->101



00000102    -->@102  Array [] ->102

00000102    -->%arrf : variable `0` arrf = @102 ->102

00000103    -->@103  @102 ADD(4) @93 ->103

00000104    -->@104  @102 EQU(21) @103 ->104

00000105    -->@105  buffer 0 to @105

00000106    -->@106  @102 ELEMENT(11) @105 ->106

00000107    -->@107  buffer 1 to @107

00000108    -->@108  buffer 12 to @108

00000109    -->@109  buffer 6 to @109

00000110    -->@110  arrf[0]@106[107, 108, 109] ->110

00000110    -->%finarr_ret : variable `0` finarr_ret = @110 ->110

00000111    -->@111  buffer 25 to @111

00000112    -->@112  @111 ADD(4) @110 ->112

00000113    -->@113  buffer 26 to @113

00000114    -->@114  @112 ADD(4) @113 ->114

00000115    -->@115  COND(10) @110 ->115

00000116    -->@116  @114 ADD(4) @115 ->116

00000117    -->@117  println@5[116] ->117

00000118    -->@118  buffer 1 to @118

00000119    -->@119  buffer 6 to @119

00000120    -->@120  buffer 12 to @120

00000121    -->@121  Array [119, 120] ->121

00000122    -->@122  buffer 17 to @122

00000123    -->@123  buffer 14 to @123

00000124    -->@124  buffer 15 to @124

00000125    -->@125  buffer 16 to @125

00000126    -->@126  buffer 27 to @126

00000127    -->@127  buffer 28 to @127

00000128    -->@128  Array [125, 126, 127] ->128

00000129    -->@129  Array [123, 124, 128] ->129

00000130    -->@130  buffer 0 to @130

00000131    -->@131  Array [118, 121, 122, 129, 130] ->131

00000131    -->%mulDimArr : variable `0` mulDimArr = @131 ->131

00000132    -->@132  buffer 12 to @132

00000133    -->@133  @131 ELEMENT(11) @132 ->133

00000134    -->@134  buffer 6 to @134

00000135    -->@135  @133 ELEMENT(11) @134 ->135

00000136    -->@136  buffer 6 to @136

00000137    -->@137  @135 ELEMENT(11) @136 ->137

00000138    -->@138  println@5[137] ->138

00000139    -->@139  object ->139 :
00000140    ---->@140  buffer 29 to @140

00000141    ---->@141  buffer 30 to @141

00000142    ---->!142  Flag PAIR(51) [140, 141, 139]

00000143    ---->@143  buffer 31 to @143

00000144    ---->@144  buffer 32 to @144

00000145    ---->!145  Flag PAIR(51) [143, 144, 139]

00000146    ---->%printInfo : function printInfo[] returns 147 ->146 :
00000148    ------>#148 :
00000149    -------->@149  buffer 33 to @149

00000150    -------->@150  buffer 29 to @150

00000151    -------->@151  @139 ELEMENT(11) @150 ->151

00000152    -------->@152  @149 ADD(4) @151 ->152

00000153    -------->@153  buffer 34 to @153

00000154    -------->@154  @152 ADD(4) @153 ->154

00000155    -------->@155  buffer 31 to @155

00000156    -------->@156  @139 ELEMENT(11) @155 ->156

00000157    -------->@157  @154 ADD(4) @156 ->157

00000158    -------->@158  buffer 35 to @158

00000159    -------->@159  @157 ADD(4) @158 ->159

00000160    -------->@160  println@5[159] ->160



00000161    ---->@161  buffer 36 to @161

00000162    ---->!162  Flag PAIR(51) [161, 146, 139]


00000139    -->%obja : variable `0` obja = @139 ->139

00000163    -->@163  buffer 36 to @163

00000164    -->@164  @139 ELEMENT(11) @163 ->164

00000165    -->@165  obja["printInfo"]@164[] ->165

00000166    -->%loop_dec : function loop_dec[id=167 name=times] returns 168 ->166 :
00000169    ---->#169 :
00000167    ------>%i : variable `0` i = @167 ->167

00000170    ------>^170  while ->170 :
00000171    -------->@171  buffer 1 to @171

00000172    -------->@172  @171 LT(15) @167 ->172

00000173    -------->@173  @167 EQ(19) @171 ->173

00000174    -------->@174  @172 BOR(25) @173 ->174

00000175    -------->!175  Flag BREAKIF(48) [174]

00000176    -------->#176 :
00000177    ---------->@177  buffer 37 to @177

00000178    ---------->@178  @177 ADD(4) @167 ->178

00000179    ---------->@179  println@5[178] ->179


00000180    -------->!180  Flag END(47) [169]





Compilation started...
Parsed file test/test.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:1 ms.
ID:java
File test/test.erable finished.Total time:69 ms.
ConstantPoolElement{id=0, obj=0}
ConstantPoolElement{id=1, obj=1}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=print}
ConstantPoolElement{id=4, obj=scan}
ConstantPoolElement{id=5, obj=stdlib/ios.erable}
ConstantPoolElement{id=6, obj=stdlib/java.ec}
ConstantPoolElement{id=7, obj=stdlib/java.dynec}
ConstantPoolElement{id=8, obj=hi}
ConstantPoolElement{id=9, obj=2}
ConstantPoolElement{id=10, obj=qualified!}
ConstantPoolElement{id=11, obj=name}
ConstantPoolElement{id=12, obj=age}
ConstantPoolElement{id=13, obj=habits}
ConstantPoolElement{id=14, obj=says:MEOWWWWWW}
ConstantPoolElement{id=15, obj=meow}
ConstantPoolElement{id=16, obj=divide ended.}
ConstantPoolElement{id=17, obj=1.5}
ConstantPoolElement{id=18, obj=2.0}
ConstantPoolElement{id=19, obj=java.lang.String}
ConstantPoolElement{id=20, obj=abc}
00000000    >#0 :
00000001    -->|ConstantPool

00000002    -->@2  buffer 1 to @2

00000002    -->%true : variable `0` true = @2 ->2

00000003    -->@3  buffer 0 to @3

00000003    -->%false : variable `0` false = @3 ->3

00000004    -->@4  buffer 2 to @4

00000005    -->%println : function println[id=6 name=object] returns 7 ->5 : native 8
00000008    ---->@8  buffer 3 to @8


00000009    -->%scan : function scan[] returns 10 ->9 : native 11
00000011    ---->@11  buffer 4 to @11


00000012    -->@12  buffer 5 to @12

00000013    -->@13  buffer 6 to @13

00000014    -->@14  buffer 7 to @14

00000015    -->%java  Dynamic Load Module: stdlib/java.ec, Table: stdlib/java.dynec, as 15 with name java

00000016    -->@16  buffer 8 to @16

00000016    -->%prefix : variable `0` prefix = @16 ->16

00000017    -->%mul : function mul[id=18 name=a, id=19 name=b] returns 20 ->17 :
00000021    ---->#21 :
00000022    ------>@22  @18 MUL(6) @19 ->22

00000023    ------>@23  @20 EQU(21) @22 ->23



00000024    -->%quad : function quad[id=25 name=a, id=26 name=b, id=27 name=c, id=28 name=x] returns 29 ->24 :
00000030    ---->#30 :
00000031    ------>@31  buffer 9 to @31

00000032    ------>@32  @25 POW(9) @31 ->32

00000032    ------>%power : variable `1` power = @32 ->32

00000033    ------>@33  @26 MUL(6) @28 ->33

00000034    ------>@34  @32 ADD(4) @33 ->34

00000035    ------>@35  @34 ADD(4) @27 ->35

00000036    ------>@36  @29 EQU(21) @35 ->36



00000037    -->%makeSquare : function makeSquare[id=38 name=width, id=39 name=height] returns 40 ->37 :
00000041    ---->#41 :
00000042    ------>@42  mul@17[38, 39] ->42

00000043    ------>@43  Array [38, 39, 42] ->43

00000044    ------>@44  @40 EQU(21) @43 ->44



00000045    -->%switchWH : function switchWH[id=46 name=square] returns 47 ->45 :
00000048    ---->#48 :
00000049    ------>^49  if ->49
00000050    -------->@50  buffer 0 to @50

00000051    -------->@51  @46 ELEMENT(11) @50 ->51

00000052    -------->@52  buffer 1 to @52

00000053    -------->@53  @46 ELEMENT(11) @52 ->53

00000054    -------->@54  @51 EQ(19) @53 ->54

00000055    -------->!55  Flag BREAKIF(48) [54]

00000056    -------->@56  @47 EQU(21) @46 ->56

00000057    -------->!57  Flag END(47) [48]

00000058    -------->^58  else ->58
00000059    ---------->^59  if ->59
00000060    ------------>@60  buffer 0 to @60

00000061    ------------>@61  @46 ELEMENT(11) @60 ->61

00000062    ------------>@62  buffer 0 to @62

00000063    ------------>@63  @61 EQ(19) @62 ->63

00000064    ------------>@64  buffer 1 to @64

00000065    ------------>@65  @46 ELEMENT(11) @64 ->65

00000066    ------------>@66  @63 BOR(25) @65 ->66

00000067    ------------>@67  buffer 0 to @67

00000068    ------------>@68  @66 EQ(19) @67 ->68

00000069    ------------>!69  Flag BREAKIF(48) [68]

00000070    ------------>@70  @47 EQU(21) @46 ->70

00000071    ------------>!71  Flag END(47) [58]

00000072    ------------>^72  else ->72
00000073    -------------->@73  buffer 10 to @73

00000074    -------------->@74  println@5[73] ->74





00000075    ------>@75  buffer 0 to @75

00000076    ------>@76  @46 ELEMENT(11) @75 ->76

00000077    ------>@77  buffer 1 to @77

00000078    ------>@78  @46 ELEMENT(11) @77 ->78

00000079    ------>@79  Copy @76 to @79

00000080    ------>@80  @76 EQU(21) @78 ->80

00000081    ------>@81  @78 EQU(21) @79 ->81

00000082    ------>@82  @47 EQU(21) @46 ->82



00000083    -->%isNegative : function isNegative[id=84 name=number] returns 85 ->83 :
00000086    ---->#86 :
00000087    ------>^87  if ->87
00000088    -------->@88  @3 SUB(5) @84 ->88

00000089    -------->@89  @88 EQ(19) @84 ->89

00000090    -------->!90  Flag BREAKIF(48) [89]

00000091    -------->#91 :
00000092    ---------->@92  @85 EQU(21) @2 ->92


00000093    -------->!93  Flag END(47) [86]

00000094    -------->^94  else ->94
00000095    ---------->#95 :
00000096    ------------>@96  @85 EQU(21) @3 ->96






00000097    -->%loop : function loop[id=98 name=from, id=99 name=to, id=100 name=step] returns 101 ->97 :
00000102    ---->#102 :
00000098    ------>%a : variable `1` a = @98 ->98

00000103    ------>@103  buffer 0 to @103

00000103    ------>%count : variable `1` count = @103 ->103

00000104    ------>^104  while ->104 :
00000105    -------->@105  @98 LT(15) @99 ->105

00000106    -------->!106  Flag BREAKIF(48) [105]

00000107    -------->#107 :
00000108    ---------->@108  @98 ADD(4) @100 ->108

00000109    ---------->@109  @98 EQU(21) @108 ->109


00000110    -------->!110  Flag END(47) [102]


00000111    ------>@111  @101 EQU(21) @103 ->111



00000112    -->%say : function say[id=113 name=something] returns 114 ->112 :
00000115    ---->#115 :
00000116    ------>@116  @16 ADD(4) @113 ->116

00000117    ------>@117  @114 EQU(21) @116 ->117



00000118    -->%newCat : function newCat[id=119 name=name, id=120 name=age] returns 121 ->118 :
00000122    ---->#122 :
00000123    ------>@123  object ->123 :
00000124    -------->@124  buffer 11 to @124

00000125    -------->!125  Flag PAIR(51) [124, 119, 123]

00000126    -------->@126  buffer 12 to @126

00000127    -------->!127  Flag PAIR(51) [126, 120, 123]

00000128    -------->@128  buffer 13 to @128

00000129    -------->@129  buffer 9 to @129

00000130    -------->!130  Flag PAIR(51) [128, 129, 123]

00000131    -------->%meow : function meow[] returns 132 ->131 :
00000133    ---------->#133 :
00000134    ------------>@134  buffer 11 to @134

00000135    ------------>@135  @123 ELEMENT(11) @134 ->135

00000136    ------------>@136  buffer 14 to @136

00000137    ------------>@137  @135 ADD(4) @136 ->137

00000138    ------------>@138  println@5[137] ->138



00000139    -------->@139  buffer 15 to @139

00000140    -------->!140  Flag PAIR(51) [139, 131, 123]


00000141    ------>@141  @121 EQU(21) @123 ->141



00000142    -->%testTryCatch : function testTryCatch[id=143 name=a, id=144 name=b] returns 145 ->142 :
00000146    ---->#146 :
00000003    ------>%e : variable `0` e = @3 ->3

00000147    ------>^147  try ->147 :

00000148    -------->#148 :
00000149    ---------->#149 :
00000150    ------------>@150  @143 DIV(7) @144 ->150

00000151    ------------>@151  @145 EQU(21) @150 ->151



00000152    -------->#152 :
00000153    ---------->#153 :
00000154    ------------>@154  println@5[3] ->154



00000155    -------->#155 :
00000156    ---------->#156 :
00000157    ------------>@157  buffer 16 to @157

00000158    ------------>@158  println@5[157] ->158





00000159    -->@159  buffer 17 to @159

00000160    -->@160  buffer 18 to @160

00000161    -->@161  makeSquare@37[159, 160] ->161

00000161    -->%square : variable `0` square = @161 ->161

00000162    -->@162  @161 EQU(21) @45 ->162

00000163    -->@163  square=switchWH@162[161] ->163

00000164    -->@164  println@5[161] ->164

00000165    -->@165  Module @15 Accessing: @4 to ID 165

00000166    -->@166  buffer 19 to @166

00000167    -->@167  buffer 20 to @167

00000168    -->@168  Array [167] ->168

00000169    -->@169  java->java_new@165[166, 168] ->169


Compilation started...
