Parsed file test/instance.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:19 ms.
File test/instance.erable finished.Total time:900 ms.
ConstantPoolElement{id=0, obj=0}
ConstantPoolElement{id=1, obj=1}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=print}
ConstantPoolElement{id=4, obj=scan}
ConstantPoolElement{id=5, obj=a}
ConstantPoolElement{id=6, obj=2}
ConstantPoolElement{id=7, obj=1.2345}
ConstantPoolElement{id=8, obj=java}
ConstantPoolElement{id=9, obj=15}
ConstantPoolElement{id=10, obj=129}
ConstantPoolElement{id=11, obj=123}
ConstantPoolElement{id=12, obj=3}
ConstantPoolElement{id=13, obj=20}
ConstantPoolElement{id=14, obj=5}
ConstantPoolElement{id=15, obj=6}
ConstantPoolElement{id=16, obj=7}
ConstantPoolElement{id=17, obj=4}
ConstantPoolElement{id=18, obj=24}
ConstantPoolElement{id=19, obj=Hello World!}
ConstantPoolElement{id=20, obj=omg}
ConstantPoolElement{id=21, obj=pa=}
ConstantPoolElement{id=22, obj=It works!!!}
ConstantPoolElement{id=23, obj=pa changed into :}
ConstantPoolElement{id=24, obj=Input:}
ConstantPoolElement{id=25, obj=final: }
ConstantPoolElement{id=26, obj=, }
ConstantPoolElement{id=27, obj=8}
ConstantPoolElement{id=28, obj=9}
ConstantPoolElement{id=29, obj=name}
ConstantPoolElement{id=30, obj=William Ye}
ConstantPoolElement{id=31, obj=age}
ConstantPoolElement{id=32, obj=12}
ConstantPoolElement{id=33, obj=My name is }
ConstantPoolElement{id=34, obj=, I am }
ConstantPoolElement{id=35, obj= years old.}
ConstantPoolElement{id=36, obj=printInfo}
00000000    >#0 :
00000001    -->|ConstantPool

00000002    -->@2  buffer 1 to @2

00000002    -->%true : variable `0` true = @2 ->2

00000003    -->@3  buffer 0 to @3

00000003    -->%false : variable `0` false = @3 ->3

00000004    -->@4  buffer 2 to @4

00000005    -->%println : function println[id=6 name=object] returns 7 ->5 : native 8
00000008    ---->@8  buffer 3 to @8


00000009    -->%scan : function scan[] returns 10 ->9 : native 11
00000011    ---->@11  buffer 4 to @11


00000012    -->@12  buffer 5 to @12

00000013    -->@13  buffer 6 to @13

00000014    -->@14  buffer 7 to @14

00000015    -->@15  buffer 8 to @15

00000015    -->%a : variable `0` a = @15 ->15

00000016    -->@16  GREF(37) @15 ->16

00000016    -->%b : variable `0` b = @16 ->16

00000017    -->@17  REF(36) @16 ->17

00000017    -->%c : variable `0` c = @17 ->17

00000018    -->@18  buffer 9 to @18

00000018    -->%d : variable `0` d = @18 ->18

00000019    -->@19  GREF(37) @18 ->19

00000019    -->%e : variable `0` e = @19 ->19

00000020    -->@20  REF(36) @19 ->20

00000021    -->@21  REF(36) @20 ->21

00000021    -->%ouch : variable `0` ouch = @21 ->21

00000022    -->@22  buffer 10 to @22

00000022    -->%num : variable `0` num = @22 ->22

00000023    -->@23  buffer 11 to @23

00000024    -->@24  @22 ADD(4) @23 ->24

00000025    -->@25  @22 EQU(23) @24 ->25

00000026    -->@26  buffer 6 to @26

00000027    -->@27  @22 DIV(7) @26 ->27

00000028    -->@28  @22 EQU(23) @27 ->28

00000029    -->@29  buffer 9 to @29

00000030    -->@30  buffer 12 to @30

00000031    -->@31  @29 MUL(6) @30 ->31

00000032    -->@32  buffer 13 to @32

00000033    -->@33  buffer 14 to @33

00000034    -->@34  @32 DIV(7) @33 ->34

00000035    -->@35  @31 SUB(5) @34 ->35

00000036    -->@36  buffer 15 to @36

00000037    -->@37  buffer 16 to @37

00000038    -->@38  @36 MOD(8) @37 ->38

00000039    -->@39  buffer 12 to @39

00000040    -->@40  buffer 17 to @40

00000041    -->@41  @39 MUL(6) @40 ->41

00000042    -->@42  @38 SUB(5) @41 ->42

00000043    -->@43  @35 ADD(4) @42 ->43

00000043    -->%num2 : variable `0` num2 = @43 ->43

00000044    -->@44  buffer 1 to @44

00000045    -->@45  buffer 6 to @45

00000046    -->@46  buffer 12 to @46

00000047    -->@47  buffer 14 to @47

00000048    -->@48  buffer 15 to @48

00000049    -->@49  buffer 17 to @49

00000050    -->@50  buffer 15 to @50

00000051    -->@51  buffer 16 to @51

00000052    -->@52  buffer 6 to @52

00000053    -->@53  Array [44, 45, 46, 47, 48, 49, 50, 51, 52] ->53

00000053    -->%arr : variable `0` arr = @53 ->53

00000054    -->@54  buffer 18 to @54

00000055    -->@55  @53 ADD(4) @54 ->55

00000056    -->@56  @53 EQU(23) @55 ->56

00000057    -->%testfunc1 : function testfunc1[id=58 name=f, id=59 name=g, id=60 name=h, id=61 name=i] returns 62 ->57 :
00000063    ---->#63 :
00000064    ------>@64  @58 ADD(4) @59 ->64

00000065    ------>@65  @64 ADD(4) @60 ->65

00000066    ------>@66  @65 ADD(4) @61 ->66

00000068    ------>@68  @62 EQU(23) @66 ->68



00000069    -->@69  buffer 6 to @69

00000070    -->@70  buffer 12 to @70

00000071    -->@71  buffer 17 to @71

00000072    -->@72  buffer 12 to @72

00000073    -->@73  testfunc1@57[69, 70, 71, 72] ->73

00000073    -->%tfs : variable `0` tfs = @73 ->73

00000074    -->@74  buffer 1 to @74

00000075    -->@75  buffer 6 to @75

00000076    -->@76  buffer 12 to @76

00000077    -->@77  buffer 17 to @77

00000078    -->@78  testfunc1@57[74, 75, 76, 77] ->78

00000079    -->@79  @73 ADD(4) @78 ->79

00000080    -->@80  @73 EQU(23) @79 ->80

00000081    -->@81  buffer 19 to @81

00000082    -->@82  println@5[81] ->82

00000083    -->@83  buffer 20 to @83

00000083    -->%pa : variable `0` pa = @83 ->83

00000084    -->@84  buffer 21 to @84

00000085    -->@85  @84 ADD(4) @83 ->85

00000086    -->@86  println@5[85] ->86

00000087    -->@87  buffer 22 to @87

00000088    -->@88  @83 EQU(23) @87 ->88

00000089    -->@89  buffer 23 to @89

00000090    -->@90  @89 ADD(4) @83 ->90

00000091    -->@91  println@5[90] ->91

00000092    -->@92  buffer 24 to @92

00000093    -->@93  println@5[92] ->93

00000094    -->%finarr : function finarr[id=95 name=a, id=96 name=b, id=97 name=c] returns 98 ->94 :
00000099    ---->#99 :
00000100    ------>@100  @96 SUB(5) @97 ->100

00000101    ------>@101  @95 ADD(4) @100 ->101

00000103    ------>@103  @98 EQU(23) @101 ->103



00000104    -->@104  Array [] ->104

00000104    -->%arrf : variable `0` arrf = @104 ->104

00000105    -->@105  @104 ADD(4) @94 ->105

00000106    -->@106  @104 EQU(23) @105 ->106

00000107    -->@107  buffer 0 to @107

00000108    -->@108  @104 ELEMENT(13) @107 ->108

00000109    -->@109  buffer 1 to @109

00000110    -->@110  buffer 12 to @110

00000111    -->@111  buffer 6 to @111

00000112    -->@112  arrf[0]@108[109, 110, 111] ->112

00000112    -->%finarr_ret : variable `0` finarr_ret = @112 ->112

00000113    -->@113  buffer 25 to @113

00000114    -->@114  @113 ADD(4) @112 ->114

00000115    -->@115  buffer 26 to @115

00000116    -->@116  @114 ADD(4) @115 ->116

00000117    -->@117  COND(12) @112 ->117

00000118    -->@118  @116 ADD(4) @117 ->118

00000119    -->@119  println@5[118] ->119

00000120    -->@120  buffer 1 to @120

00000121    -->@121  buffer 6 to @121

00000122    -->@122  buffer 12 to @122

00000123    -->@123  Array [121, 122] ->123

00000124    -->@124  buffer 17 to @124

00000125    -->@125  buffer 14 to @125

00000126    -->@126  buffer 15 to @126

00000127    -->@127  buffer 16 to @127

00000128    -->@128  buffer 27 to @128

00000129    -->@129  buffer 28 to @129

00000130    -->@130  Array [127, 128, 129] ->130

00000131    -->@131  Array [125, 126, 130] ->131

00000132    -->@132  buffer 0 to @132

00000133    -->@133  Array [120, 123, 124, 131, 132] ->133

00000133    -->%mulDimArr : variable `0` mulDimArr = @133 ->133

00000134    -->@134  buffer 12 to @134

00000135    -->@135  @133 ELEMENT(13) @134 ->135

00000136    -->@136  buffer 6 to @136

00000137    -->@137  @135 ELEMENT(13) @136 ->137

00000138    -->@138  buffer 6 to @138

00000139    -->@139  @137 ELEMENT(13) @138 ->139

00000140    -->@140  println@5[139] ->140

00000141    -->@141  object ->141 :
00000142    ---->@142  buffer 29 to @142

00000143    ---->@143  buffer 30 to @143

00000144    ---->!144  Flag PAIR(53) [142, 143, 141]

00000145    ---->@145  buffer 31 to @145

00000146    ---->@146  buffer 32 to @146

00000147    ---->!147  Flag PAIR(53) [145, 146, 141]

00000148    ---->%printInfo : function printInfo[] returns 149 ->148 :
00000150    ------>#150 :
00000151    -------->@151  buffer 33 to @151

00000152    -------->@152  buffer 29 to @152

00000153    -------->@153  @141 ELEMENT(13) @152 ->153

00000154    -------->@154  @151 ADD(4) @153 ->154

00000155    -------->@155  buffer 34 to @155

00000156    -------->@156  @154 ADD(4) @155 ->156

00000157    -------->@157  buffer 31 to @157

00000158    -------->@158  @141 ELEMENT(13) @157 ->158

00000159    -------->@159  @156 ADD(4) @158 ->159

00000160    -------->@160  buffer 35 to @160

00000161    -------->@161  @159 ADD(4) @160 ->161

00000162    -------->@162  println@5[161] ->162



00000163    ---->@163  buffer 36 to @163

00000164    ---->!164  Flag PAIR(53) [163, 148, 141]


00000141    -->%obja : variable `0` obja = @141 ->141

00000165    -->@165  buffer 36 to @165

00000166    -->@166  @141 ELEMENT(13) @165 ->166

00000167    -->@167  obja["printInfo"]@166[] ->167


Compilation started...
Parsed file test/test.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:2 ms.
ID:java
File test/test.erable finished.Total time:61 ms.
ConstantPoolElement{id=0, obj=0}
ConstantPoolElement{id=1, obj=1}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=print}
ConstantPoolElement{id=4, obj=scan}
ConstantPoolElement{id=5, obj=stdlib/ios.erable}
ConstantPoolElement{id=6, obj=stdlib/java.ec}
ConstantPoolElement{id=7, obj=stdlib/java.dynec}
ConstantPoolElement{id=8, obj=hi}
ConstantPoolElement{id=9, obj=2}
ConstantPoolElement{id=10, obj=qualified!}
ConstantPoolElement{id=11, obj=name}
ConstantPoolElement{id=12, obj=age}
ConstantPoolElement{id=13, obj=habits}
ConstantPoolElement{id=14, obj=says:MEOWWWWWW}
ConstantPoolElement{id=15, obj=meow}
ConstantPoolElement{id=16, obj=divide ended.}
ConstantPoolElement{id=17, obj=1.5}
ConstantPoolElement{id=18, obj=2.0}
ConstantPoolElement{id=19, obj=java.lang.String}
ConstantPoolElement{id=20, obj=abc}
00000000    >#0 :
00000001    -->|ConstantPool

00000002    -->@2  buffer 1 to @2

00000002    -->%true : variable `0` true = @2 ->2

00000003    -->@3  buffer 0 to @3

00000003    -->%false : variable `0` false = @3 ->3

00000004    -->@4  buffer 2 to @4

00000005    -->%println : function println[id=6 name=object] returns 7 ->5 : native 8
00000008    ---->@8  buffer 3 to @8


00000009    -->%scan : function scan[] returns 10 ->9 : native 11
00000011    ---->@11  buffer 4 to @11


00000012    -->@12  buffer 5 to @12

00000013    -->@13  buffer 6 to @13

00000014    -->@14  buffer 7 to @14

00000015    -->%java  Dynamic Load Module: stdlib/java.ec, Table: stdlib/java.dynec, as 15 with name java

00000016    -->@16  buffer 8 to @16

00000016    -->%prefix : variable `0` prefix = @16 ->16

00000017    -->%mul : function mul[id=18 name=a, id=19 name=b] returns 20 ->17 :
00000021    ---->#21 :
00000022    ------>@22  @18 MUL(6) @19 ->22

00000024    ------>@24  @20 EQU(23) @22 ->24



00000025    -->%quad : function quad[id=26 name=a, id=27 name=b, id=28 name=c, id=29 name=x] returns 30 ->25 :
00000031    ---->#31 :
00000032    ------>@32  buffer 9 to @32

00000033    ------>@33  @26 POW(9) @32 ->33

00000033    ------>%power : variable `1` power = @33 ->33

00000034    ------>@34  @27 MUL(6) @29 ->34

00000035    ------>@35  @33 ADD(4) @34 ->35

00000036    ------>@36  @35 ADD(4) @28 ->36

00000038    ------>@38  @30 EQU(23) @36 ->38



00000039    -->%makeSquare : function makeSquare[id=40 name=width, id=41 name=height] returns 42 ->39 :
00000043    ---->#43 :
00000044    ------>@44  mul@17[40, 41] ->44

00000045    ------>@45  Array [40, 41, 44] ->45

00000047    ------>@47  @42 EQU(23) @45 ->47



00000048    -->%switchWH : function switchWH[id=49 name=square] returns 50 ->48 :
00000051    ---->#51 :
00000052    ------>^52  if ->52
00000053    -------->@53  buffer 0 to @53

00000054    -------->@54  @49 ELEMENT(13) @53 ->54

00000055    -------->@55  buffer 1 to @55

00000056    -------->@56  @49 ELEMENT(13) @55 ->56

00000057    -------->@57  @54 EQ(21) @56 ->57

00000058    -------->!58  Flag BREAKIF(50) [57]

00000060    -------->@60  @50 EQU(23) @49 ->60

00000061    -------->!61  Flag END(49) [51]

00000062    -------->^62  else ->62
00000063    ---------->^63  if ->63
00000064    ------------>@64  buffer 0 to @64

00000065    ------------>@65  @49 ELEMENT(13) @64 ->65

00000066    ------------>@66  buffer 0 to @66

00000067    ------------>@67  @65 EQ(21) @66 ->67

00000068    ------------>@68  buffer 1 to @68

00000069    ------------>@69  @49 ELEMENT(13) @68 ->69

00000070    ------------>@70  @67 BOR(27) @69 ->70

00000071    ------------>@71  buffer 0 to @71

00000072    ------------>@72  @70 EQ(21) @71 ->72

00000073    ------------>!73  Flag BREAKIF(50) [72]

00000075    ------------>@75  @50 EQU(23) @49 ->75

00000076    ------------>!76  Flag END(49) [62]

00000077    ------------>^77  else ->77
00000078    -------------->@78  buffer 10 to @78

00000079    -------------->@79  println@5[78] ->79





00000080    ------>@80  buffer 0 to @80

00000081    ------>@81  @49 ELEMENT(13) @80 ->81

00000082    ------>@82  buffer 1 to @82

00000083    ------>@83  @49 ELEMENT(13) @82 ->83

00000084    ------>@84  @81 SWITCH(24) @83 ->84

00000086    ------>@86  @50 EQU(23) @49 ->86



00000087    -->%isNegative : function isNegative[id=88 name=number] returns 89 ->87 :
00000090    ---->#90 :
00000091    ------>^91  if ->91
00000092    -------->@92  NEG(11) @88 ->92

00000093    -------->@93  @92 EQ(21) @88 ->93

00000094    -------->!94  Flag BREAKIF(50) [93]

00000095    -------->#95 :
00000097    ---------->@97  @89 EQU(23) @2 ->97


00000098    -------->!98  Flag END(49) [90]

00000099    -------->^99  else ->99
00000100    ---------->#100 :
00000102    ------------>@102  @89 EQU(23) @3 ->102






00000103    -->%loop : function loop[id=104 name=from, id=105 name=to, id=106 name=step] returns 107 ->103 :
00000108    ---->#108 :
00000104    ------>%a : variable `1` a = @104 ->104

00000109    ------>@109  buffer 0 to @109

00000109    ------>%count : variable `1` count = @109 ->109

00000110    ------>^110  while ->110 :
00000111    -------->@111  @104 LT(17) @105 ->111

00000112    -------->!112  Flag BREAKIF(50) [111]

00000113    -------->#113 :
00000114    ---------->@114  @104 ADD(4) @106 ->114

00000115    ---------->@115  @104 EQU(23) @114 ->115


00000116    -------->!116  Flag END(49) [108]


00000118    ------>@118  @107 EQU(23) @109 ->118



00000119    -->%say : function say[id=120 name=something] returns 121 ->119 :
00000122    ---->#122 :
00000123    ------>@123  @16 ADD(4) @120 ->123

00000125    ------>@125  @121 EQU(23) @123 ->125



00000126    -->%newCat : function newCat[id=127 name=name, id=128 name=age] returns 129 ->126 :
00000130    ---->#130 :
00000131    ------>@131  object ->131 :
00000132    -------->@132  buffer 11 to @132

00000133    -------->!133  Flag PAIR(53) [132, 127, 131]

00000134    -------->@134  buffer 12 to @134

00000135    -------->!135  Flag PAIR(53) [134, 128, 131]

00000136    -------->@136  buffer 13 to @136

00000137    -------->@137  buffer 9 to @137

00000138    -------->!138  Flag PAIR(53) [136, 137, 131]

00000139    -------->%meow : function meow[] returns 140 ->139 :
00000141    ---------->#141 :
00000142    ------------>@142  buffer 11 to @142

00000143    ------------>@143  @131 ELEMENT(13) @142 ->143

00000144    ------------>@144  buffer 14 to @144

00000145    ------------>@145  @143 ADD(4) @144 ->145

00000146    ------------>@146  println@5[145] ->146



00000147    -------->@147  buffer 15 to @147

00000148    -------->!148  Flag PAIR(53) [147, 139, 131]


00000150    ------>@150  @129 EQU(23) @131 ->150



00000151    -->%testTryCatch : function testTryCatch[id=152 name=a, id=153 name=b] returns 154 ->151 :
00000155    ---->#155 :
00000003    ------>%e : variable `0` e = @3 ->3

00000156    ------>^156  try ->156 :

00000157    -------->#157 :
00000158    ---------->#158 :
00000159    ------------>@159  @152 DIV(7) @153 ->159

00000161    ------------>@161  @154 EQU(23) @159 ->161



00000162    -------->#162 :
00000163    ---------->#163 :
00000164    ------------>@164  println@5[3] ->164



00000165    -------->#165 :
00000166    ---------->#166 :
00000167    ------------>@167  buffer 16 to @167

00000168    ------------>@168  println@5[167] ->168





00000169    -->@169  buffer 17 to @169

00000170    -->@170  buffer 18 to @170

00000171    -->@171  makeSquare@39[169, 170] ->171

00000171    -->%square : variable `0` square = @171 ->171

00000172    -->@172  @171 EQU(23) @48 ->172

00000173    -->@173  square=switchWH@172[171] ->173

00000174    -->@174  println@5[171] ->174

00000175    -->@175  Module @15 Accessing: @4 to ID 175

00000176    -->@176  buffer 19 to @176

00000177    -->@177  buffer 20 to @177

00000178    -->@178  Array [177] ->178

00000179    -->@179  java->java_new@175[176, 178] ->179


Compilation started...
