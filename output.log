Parsed file test.erable
Parsed file stdlib/ios.erable
File stdlib/ios.erable finished.Total time:4 ms.
ID:java
File test.erable finished.Total time:323 ms.
ConstantPoolElement{id=0, obj=0.0}
ConstantPoolElement{id=1, obj=1.0}
ConstantPoolElement{id=2, obj=stdlib/ios}
ConstantPoolElement{id=3, obj=java.lang.System#out#println}
ConstantPoolElement{id=4, obj=com.qiufeng.erable.stdlib.InputScanner#input}
ConstantPoolElement{id=5, obj=stdlib/ios.erable}
ConstantPoolElement{id=6, obj=stdlib/java.ec}
ConstantPoolElement{id=7, obj=stdlib/java.dynec}
ConstantPoolElement{id=8, obj=hi}
ConstantPoolElement{id=9, obj=2.0}
ConstantPoolElement{id=10, obj=qualified!}
ConstantPoolElement{id=11, obj=name}
ConstantPoolElement{id=12, obj=age}
ConstantPoolElement{id=13, obj=habits}
ConstantPoolElement{id=14, obj=says:MEOWWWWWW}
ConstantPoolElement{id=15, obj=meow}
ConstantPoolElement{id=16, obj=divide ended.}
ConstantPoolElement{id=17, obj=15.0}
ConstantPoolElement{id=18, obj=20.0}
ConstantPoolElement{id=19, obj=java.lang.String}
ConstantPoolElement{id=20, obj=abc}
00000000    >#0 :
00000001    -->|ConstantPool

00000002    -->@2  buffer 1 to @2

00000003    -->%true : variable `0` true = @2 ->3

00000004    -->@4  buffer 0 to @4

00000005    -->%false : variable `0` false = @4 ->5

00000006    -->@6  buffer 2 to @6

00000001    -->@1  buffer 3 to @1

00000002    -->%println : function println[id=0 name=object] ->2 : native 1

00000003    -->@3  buffer 4 to @3

00000004    -->%input : function input[] ->4 : native 3

00000005    -->@5  buffer 5 to @5

00000006    -->@6  buffer 6 to @6

00000007    -->@7  buffer 7 to @7

00000008    -->%java  Dynamic Load Module: stdlib/java.ec, Table: stdlib/java.dynec, as 8 with name java

00000009    -->@9  buffer 8 to @9

00000010    -->%prefix : variable `0` prefix = @9 ->10

00000011    -->%mul : function mul[id=12 name=a, id=13 name=b] ->11 :
00000014    ---->#14 :
00000015    ------>@15  @12 MUL(5) @13 ->15

00000016    ------>@16  RETURN(37) @15 ->16



00000017    -->%quad : function quad[id=18 name=a, id=19 name=b, id=20 name=c, id=21 name=x] ->17 :
00000022    ---->#22 :
00000023    ------>@23  buffer 9 to @23

00000024    ------>@24  @18 POW(8) @23 ->24

00000025    ------>%power : variable `1` power = @24 ->25

00000026    ------>@26  @25 ADD(3) @19 ->26

00000027    ------>@27  @26 MUL(5) @21 ->27

00000028    ------>@28  @27 ADD(3) @20 ->28

00000029    ------>@29  RETURN(37) @28 ->29



00000030    -->%makeSquare : function makeSquare[id=31 name=width, id=32 name=height] ->30 :
00000033    ---->#33 :
00000034    ------>@34  mul@11[31, 32] ->34

00000035    ------>@35  Array [31, 32, 34] ->35

00000036    ------>@36  RETURN(37) @35 ->36



00000037    -->%switchWH : function switchWH[id=38 name=square] ->37 :
00000039    ---->#39 :
00000040    ------>^40  if ->40
00000041    -------->@41  buffer 0 to @41

00000042    -------->@42  @38 ELEMENT(11) @41 ->42

00000043    -------->@43  buffer 1 to @43

00000044    -------->@44  @38 ELEMENT(11) @43 ->44

00000045    -------->@45  @42 EQ(20) @44 ->45

00000046    -------->!46  Flag BREAKIF(53) [45]

00000047    -------->@47  RETURN(37) @38 ->47

00000048    -------->!48  Flag END(52) [39]

00000049    -------->^49  else ->49
00000050    ---------->^50  if ->50
00000051    ------------>@51  buffer 0 to @51

00000052    ------------>@52  @38 ELEMENT(11) @51 ->52

00000053    ------------>@53  buffer 0 to @53

00000054    ------------>@54  @52 EQ(20) @53 ->54

00000055    ------------>@55  buffer 1 to @55

00000056    ------------>@56  @38 ELEMENT(11) @55 ->56

00000057    ------------>@57  @54 BOR(26) @56 ->57

00000058    ------------>@58  buffer 0 to @58

00000059    ------------>@59  @57 EQ(20) @58 ->59

00000060    ------------>!60  Flag BREAKIF(53) [59]

00000061    ------------>@61  RETURN(37) @38 ->61

00000062    ------------>!62  Flag END(52) [49]

00000063    ------------>^63  else ->63
00000064    -------------->@64  buffer 10 to @64

00000065    -------------->@65  println@2[64] ->65





00000066    ------>@66  buffer 0 to @66

00000067    ------>@67  @38 ELEMENT(11) @66 ->67

00000068    ------>@68  buffer 1 to @68

00000069    ------>@69  @38 ELEMENT(11) @68 ->69

00000070    ------>@70  @67 SWITCH(23) @69 ->70

00000071    ------>@71  RETURN(37) @38 ->71



00000072    -->%isNegative : function isNegative[id=73 name=number] ->72 :
00000074    ---->#74 :
00000075    ------>^75  if ->75
00000076    -------->@76  NEG(10) @73 ->76

00000077    -------->@77  @76 EQ(20) @73 ->77

00000078    -------->!78  Flag BREAKIF(53) [77]

00000079    -------->#79 :
00000080    ---------->@80  RETURN(37) @3 ->80


00000081    -------->!81  Flag END(52) [74]

00000082    -------->^82  else ->82
00000083    ---------->#83 :
00000084    ------------>@84  RETURN(37) @5 ->84






00000085    -->%loop : function loop[id=86 name=from, id=87 name=to, id=88 name=step] ->85 :
00000089    ---->#89 :
00000090    ------>%a : variable `1` a = @86 ->90

00000091    ------>@91  buffer 0 to @91

00000092    ------>%count : variable `1` count = @91 ->92

00000093    ------>^93  while ->93 :
00000094    -------->@94  @90 LT(16) @87 ->94

00000095    -------->!95  Flag BREAKIF(53) [94]

00000096    -------->#96 :
00000097    ---------->@97  @90 ADD(3) @88 ->97

00000098    ---------->@98  @90 EQU(22) @97 ->98


00000099    -------->!99  Flag END(52) [89]


00000100    ------>@100  RETURN(37) @92 ->100



00000101    -->%say : function say[id=102 name=something] ->101 :
00000103    ---->#103 :
00000104    ------>@104  @10 ADD(3) @102 ->104

00000105    ------>@105  RETURN(37) @104 ->105



00000106    -->%newCat : function newCat[id=107 name=name, id=108 name=age] ->106 :
00000109    ---->#109 :
00000110    ------>@110  object ->110 :
00000111    -------->!111  Flag START_PAIR(56) []

00000112    -------->@112  buffer 11 to @112

00000113    -------->!113  Flag KEY(57) [112]

00000114    -------->!114  Flag VALUE(58) [107]

00000115    -------->!115  Flag END_PAIR(59) []

00000116    -------->!116  Flag START_PAIR(56) []

00000117    -------->@117  buffer 12 to @117

00000118    -------->!118  Flag KEY(57) [117]

00000119    -------->!119  Flag VALUE(58) [108]

00000120    -------->!120  Flag END_PAIR(59) []

00000121    -------->!121  Flag START_PAIR(56) []

00000122    -------->@122  buffer 13 to @122

00000123    -------->!123  Flag KEY(57) [122]

00000124    -------->@124  buffer 9 to @124

00000125    -------->!125  Flag VALUE(58) [124]

00000126    -------->!126  Flag END_PAIR(59) []

00000127    -------->!127  Flag START_PAIR(56) []

00000128    -------->%meow : function meow[] ->128 :
00000129    ---------->#129 :
00000130    ------------>@130  buffer 11 to @130

00000131    ------------>@131  @110 ELEMENT(11) @130 ->131

00000132    ------------>@132  buffer 14 to @132

00000133    ------------>@133  @131 ADD(3) @132 ->133

00000134    ------------>@134  println@2[133] ->134



00000135    -------->@135  buffer 15 to @135

00000136    -------->!136  Flag KEY(57) [135]

00000137    -------->!137  Flag VALUE(58) [128]

00000138    -------->!138  Flag END_PAIR(59) []


00000139    ------>@139  RETURN(37) @110 ->139



00000140    -->%testTryCatch : function testTryCatch[id=141 name=a, id=142 name=b] ->140 :
00000143    ---->#143 :
00000144    ------>%e : variable `0` e = @5 ->144

00000145    ------>^145  try ->145 :

00000146    -------->#146 :
00000147    ---------->#147 :
00000148    ------------>@148  @141 DIV(6) @142 ->148

00000149    ------------>@149  RETURN(37) @148 ->149



00000150    -------->#150 :
00000151    ---------->#151 :
00000152    ------------>@152  println@2[144] ->152



00000153    -------->#153 :
00000154    ---------->#154 :
00000155    ------------>@155  buffer 16 to @155

00000156    ------------>@156  println@2[155] ->156





00000157    -->@157  buffer 17 to @157

00000158    -->@158  buffer 18 to @158

00000159    -->@159  makeSquare@30[157, 158] ->159

00000160    -->%square : variable `0` square = @159 ->160

00000161    -->@161  @160 EQU(22) @37 ->161

00000162    -->@162  square=switchWH@161[160] ->162

00000163    -->@163  println@2[160] ->163

00000164    -->@164  Module @8 Accessing: @9 to ID 164

00000165    -->@165  buffer 19 to @165

00000166    -->@166  buffer 20 to @166

00000167    -->@167  Array [166] ->167

00000168    -->@168  java->java_new@164[165, 167] ->168


Starting Compiler...
