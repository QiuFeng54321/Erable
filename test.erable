/*
  Test Erable Source File made by Qiufeng54321.
  Finished Comment on April 5th,2019
*/
//Test import module
use "stdlib/ios";
//Test conflict of imported module.
use "stdlib/ios.erable";
dynload "stdlib/java.ec" with "stdlib/java.dynec" as java;
var prefix="hi";
function mul:(a b){
  return a*b;
};
function quad:(a b c x){
  let power=a**2;
  return power+b*x+c;
};
function makeSquare:(width height){
  //Test array
  return [width,height,mul(width,height)];
};
//One Special Test: Variable declaration in different scope with same name
//argument 'square' should not be conflicting with variable square.
function switchWH:(square){
  if(square[0]==square[1])return square
  else if(square[0]==0|square[1]==0)return square
  else println("qualified!");
  square[0]<=>square[1];
  return square;
};
function isNegative:(number){
  if((-number)==number){
    return true;
  }else{
    return false;
  };
};
function loop:(from to step){
  let a=from;
  let count=0;
  while(a<to){
    a+=step;
  };
  return count;
};
function say:(something){
  return prefix+something;
};
//Generates a new cat.
function newCat:(name age){
  //Test Object
  return :
    "name"=name
    "age" =age
    "habits"=2
    function meow:(){
      println(parent["name"] + "says:MEOWWWWWW");
    }
  :;
};
//Function Reloading test
function testOverload:(a b){
  return "hi~"+a+b;
};
function testOverload:(c d b){
  return c*b*d;
};
function testOverload:(x){
  return x**2;
};
//Try-Catch test
function testTryCatch:(a b){
  try{
    return a/b;
  }catch e{
    println(e);
  }finally{
    println("divide ended.");
  };
};
//Main test
var obj square=makeSquare(15,20);
square=switchWH(square);
println(square);
testOverload(2,3,5);
testOverload(1,4);
testOverload(9);
testOverload(5,2,3);
java->java_new("java.lang.String",["abc"]);